

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Oct 20 21:43:19 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27  0000                     
    28                           ; Version 2.10
    29                           ; Generated 31/07/2019 GMT
    30                           ; 
    31                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     
    63                           	psect	idataCOMRAM
    64  0012A2                     __pidataCOMRAM:
    65                           	opt callstack 0
    66                           
    67                           ;initializer for teclado_getc@F3164
    68  0012A2  31                 	db	49
    69  0012A3  32                 	db	50
    70  0012A4  33                 	db	51
    71  0012A5  41                 	db	65
    72  0012A6  34                 	db	52
    73  0012A7  35                 	db	53
    74  0012A8  36                 	db	54
    75  0012A9  42                 	db	66
    76  0012AA  37                 	db	55
    77  0012AB  38                 	db	56
    78  0012AC  39                 	db	57
    79  0012AD  43                 	db	67
    80  0012AE  2A                 	db	42
    81  0012AF  30                 	db	48
    82  0012B0  23                 	db	35
    83  0012B1  44                 	db	68
    84                           
    85                           ;initializer for _pos
    86  0012B2  01                 	db	1
    87  0000                     _RCREG	set	4014
    88  0000                     _TXREG	set	4013
    89  0000                     _RCSTAbits	set	4011
    90  0000                     _TXSTAbits	set	4012
    91  0000                     _SPBRG	set	4015
    92  0000                     _TRISCbits	set	3988
    93  0000                     _PORTC	set	3970
    94  0000                     _TRISD	set	3989
    95  0000                     _PIE1bits	set	3997
    96  0000                     _INTCONbits	set	4082
    97  0000                     _ADCON1	set	4033
    98  0000                     _OSCCONbits	set	4051
    99  0000                     _TRISC	set	3988
   100  0000                     _PORTB	set	3969
   101  0000                     _LATB	set	3978
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _TRISB	set	3987
   104  0000                     _TRISDbits	set	3989
   105  0000                     _LATDbits	set	3980
   106                           
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	opt callstack 0
   110  000800  00                 	db	0
   111  000801                     STR_3:
   112  000801  31                 	db	49	;'1'
   113  000802  2E                 	db	46
   114  000803  43                 	db	67	;'C'
   115  000804  6F                 	db	111	;'o'
   116  000805  6E                 	db	110	;'n'
   117  000806  66                 	db	102	;'f'
   118  000807  20                 	db	32
   119  000808  54                 	db	84	;'T'
   120  000809  69                 	db	105	;'i'
   121  00080A  6D                 	db	109	;'m'
   122  00080B  65                 	db	101	;'e'
   123  00080C  20                 	db	32
   124  00080D  20                 	db	32
   125  00080E  20                 	db	32
   126  00080F  00                 	db	0
   127  000810                     STR_2:
   128  000810  20                 	db	32
   129  000811  20                 	db	32
   130  000812  20                 	db	32
   131  000813  20                 	db	32
   132  000814  53                 	db	83	;'S'
   133  000815  54                 	db	84	;'T'
   134  000816  4C                 	db	76	;'L'
   135  000817  20                 	db	32
   136  000818  20                 	db	32
   137  000819  20                 	db	32
   138  00081A  00                 	db	0
   139  00081B                     STR_5:
   140  00081B  41                 	db	65	;'A'
   141  00081C  6D                 	db	109	;'m'
   142  00081D  61                 	db	97	;'a'
   143  00081E  72                 	db	114	;'r'
   144  00081F  69                 	db	105	;'i'
   145  000820  6C                 	db	108	;'l'
   146  000821  6C                 	db	108	;'l'
   147  000822  6F                 	db	111	;'o'
   148  000823  00                 	db	0
   149  000824                     STR_1:
   150  000824  56                 	db	86	;'V'
   151  000825  65                 	db	101	;'e'
   152  000826  72                 	db	114	;'r'
   153  000827  64                 	db	100	;'d'
   154  000828  65                 	db	101	;'e'
   155  000829  00                 	db	0
   156  00082A                     STR_4:
   157  00082A  52                 	db	82	;'R'
   158  00082B  6F                 	db	111	;'o'
   159  00082C  6A                 	db	106	;'j'
   160  00082D  6F                 	db	111	;'o'
   161  00082E  00                 	db	0
   162                           
   163                           ; #config settings
   164  00082F  00                 	db	0	; dummy byte at the end
   165  0000                     
   166                           	psect	cinit
   167  00126C                     __pcinit:
   168                           	opt callstack 0
   169  00126C                     start_initialization:
   170                           	opt callstack 0
   171  00126C                     __initialization:
   172                           	opt callstack 0
   173                           
   174                           ; Initialize objects allocated to COMRAM (17 bytes)
   175                           ; load TBLPTR registers with __pidataCOMRAM
   176  00126C  0EA2               	movlw	low __pidataCOMRAM
   177  00126E  6EF6               	movwf	tblptrl,c
   178  001270  0E12               	movlw	high __pidataCOMRAM
   179  001272  6EF7               	movwf	tblptrh,c
   180  001274  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   181  001276  6EF8               	movwf	tblptru,c
   182  001278  EE00  F037         	lfsr	0,__pdataCOMRAM
   183  00127C  EE10 F011          	lfsr	1,17
   184  001280                     copy_data0:
   185  001280  0009               	tblrd		*+
   186  001282  CFF5 FFEE          	movff	tablat,postinc0
   187  001286  50E5               	movf	postdec1,w,c
   188  001288  50E1               	movf	fsr1l,w,c
   189  00128A  E1FA               	bnz	copy_data0
   190                           
   191                           ; Clear objects allocated to COMRAM (21 bytes)
   192  00128C  EE00  F022         	lfsr	0,__pbssCOMRAM
   193  001290  0E15               	movlw	21
   194  001292                     clear_0:
   195  001292  6AEE               	clrf	postinc0,c
   196  001294  06E8               	decf	wreg,f,c
   197  001296  E1FD               	bnz	clear_0
   198  001298                     end_of_initialization:
   199                           	opt callstack 0
   200  001298                     __end_of__initialization:
   201                           	opt callstack 0
   202  001298  0E00               	movlw	low (__Lmediumconst shr (0+16))
   203  00129A  6EF8               	movwf	tblptru,c
   204  00129C  0100               	movlb	0
   205  00129E  EFF2  F007         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  000022                     __pbssCOMRAM:
   209                           	opt callstack 0
   210  000022                     _item:
   211                           	opt callstack 0
   212  000022                     	ds	10
   213  00002C                     _numero:
   214                           	opt callstack 0
   215  00002C                     	ds	2
   216  00002E                     _VAL:
   217                           	opt callstack 0
   218  00002E                     	ds	1
   219  00002F                     _UNI:
   220                           	opt callstack 0
   221  00002F                     	ds	1
   222  000030                     _DEC:
   223                           	opt callstack 0
   224  000030                     	ds	1
   225  000031                     _read:
   226                           	opt callstack 0
   227  000031                     	ds	1
   228  000032                     _i:
   229                           	opt callstack 0
   230  000032                     	ds	1
   231  000033                     _K:
   232                           	opt callstack 0
   233  000033                     	ds	1
   234  000034                     _time:
   235                           	opt callstack 0
   236  000034                     	ds	3
   237                           
   238                           	psect	dataCOMRAM
   239  000037                     __pdataCOMRAM:
   240                           	opt callstack 0
   241  000037                     teclado_getc@F3164:
   242                           	opt callstack 0
   243  000037                     	ds	16
   244  000047                     _pos:
   245                           	opt callstack 0
   246  000047                     	ds	1
   247                           
   248                           	psect	cstackCOMRAM
   249  000001                     __pcstackCOMRAM:
   250                           	opt callstack 0
   251  000001                     ?___aldiv:
   252                           	opt callstack 0
   253  000001                     LCD_putc@ch:
   254                           	opt callstack 0
   255  000001                     LCD_command@cmd:
   256                           	opt callstack 0
   257  000001                     USART_Tx@data:
   258                           	opt callstack 0
   259  000001                     ___aldiv@dividend:
   260                           	opt callstack 0
   261  000001                     teclado_getc@letras:
   262                           	opt callstack 0
   263                           
   264                           ; 16 bytes @ 0x0
   265  000001                     	ds	1
   266  000002                     ??_LCD_init:
   267  000002                     LCD_gotoxy@y:
   268                           	opt callstack 0
   269  000002                     LCD_puts@data:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x1
   273  000002                     	ds	1
   274  000003                     ??_LCD_gotoxy:
   275                           
   276                           ; 1 bytes @ 0x2
   277  000003                     	ds	1
   278  000004                     LCD_puts@nBytes:
   279                           	opt callstack 0
   280                           
   281                           ; 1 bytes @ 0x3
   282  000004                     	ds	1
   283  000005                     ??_LCD_puts:
   284  000005                     LCD_gotoxy@DDRAMAddr:
   285                           	opt callstack 0
   286  000005                     ___aldiv@divisor:
   287                           	opt callstack 0
   288                           
   289                           ; 4 bytes @ 0x4
   290  000005                     	ds	1
   291  000006                     LCD_gotoxy@x:
   292                           	opt callstack 0
   293                           
   294                           ; 1 bytes @ 0x5
   295  000006                     	ds	1
   296  000007                     LCD_puts@i:
   297                           	opt callstack 0
   298                           
   299                           ; 1 bytes @ 0x6
   300  000007                     	ds	2
   301  000009                     ___aldiv@counter:
   302                           	opt callstack 0
   303                           
   304                           ; 1 bytes @ 0x8
   305  000009                     	ds	1
   306  00000A                     ___aldiv@sign:
   307                           	opt callstack 0
   308                           
   309                           ; 1 bytes @ 0x9
   310  00000A                     	ds	1
   311  00000B                     ___aldiv@quotient:
   312                           	opt callstack 0
   313                           
   314                           ; 4 bytes @ 0xA
   315  00000B                     	ds	4
   316  00000F                     USART_Init@BAUD:
   317                           	opt callstack 0
   318                           
   319                           ; 4 bytes @ 0xE
   320  00000F                     	ds	2
   321  000011                     teclado_getc@valor:
   322                           	opt callstack 0
   323                           
   324                           ; 1 bytes @ 0x10
   325  000011                     	ds	1
   326  000012                     teclado_getc@i:
   327                           	opt callstack 0
   328                           
   329                           ; 2 bytes @ 0x11
   330  000012                     	ds	1
   331  000013                     _USART_Init$1205:
   332                           	opt callstack 0
   333                           
   334                           ; 4 bytes @ 0x12
   335  000013                     	ds	1
   336  000014                     ??_read_time:
   337                           
   338                           ; 1 bytes @ 0x13
   339  000014                     	ds	2
   340  000016                     read_time@d:
   341                           	opt callstack 0
   342                           
   343                           ; 4 bytes @ 0x15
   344  000016                     	ds	4
   345  00001A                     read_time@u:
   346                           	opt callstack 0
   347                           
   348                           ; 4 bytes @ 0x19
   349  00001A                     	ds	4
   350  00001E                     read_time@num:
   351                           	opt callstack 0
   352                           
   353                           ; 4 bytes @ 0x1D
   354  00001E                     	ds	4
   355  000022                     
   356                           ; 1 bytes @ 0x21
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 154 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  1    wreg      void 
   369 ;; Registers used:
   370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   376 ;;      Params:         0       0       0       0       0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels required when called:    3
   382 ;; This function calls:
   383 ;;		_LCD_clear
   384 ;;		_LCD_gotoxy
   385 ;;		_LCD_init
   386 ;;		_LCD_puts
   387 ;;		_TECLADO
   388 ;;		_USART_Init
   389 ;;		_read_time
   390 ;;		_teclado_init
   391 ;; This function is called by:
   392 ;;		Startup code after reset
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text0
   397  000FE4                     __ptext0:
   398                           	opt callstack 0
   399  000FE4                     _main:
   400                           	opt callstack 28
   401  000FE4                     
   402                           ;main.c: 157:     TRISC = 0;
   403  000FE4  0E00               	movlw	0
   404  000FE6  6E94               	movwf	148,c	;volatile
   405                           
   406                           ;main.c: 158:     TRISD = 0;
   407  000FE8  0E00               	movlw	0
   408  000FEA  6E95               	movwf	149,c	;volatile
   409                           
   410                           ;main.c: 159:     PORTC = 0;
   411  000FEC  0E00               	movlw	0
   412  000FEE  6E82               	movwf	130,c	;volatile
   413  000FF0                     
   414                           ;main.c: 161:     USART_Init(9600);
   415  000FF0  0E80               	movlw	128
   416  000FF2  6E0F               	movwf	USART_Init@BAUD^0,c
   417  000FF4  0E25               	movlw	37
   418  000FF6  6E10               	movwf	(USART_Init@BAUD+1)^0,c
   419  000FF8  0E00               	movlw	0
   420  000FFA  6E11               	movwf	(USART_Init@BAUD+2)^0,c
   421  000FFC  0E00               	movlw	0
   422  000FFE  6E12               	movwf	(USART_Init@BAUD+3)^0,c
   423  001000  ECDF  F008         	call	_USART_Init	;wreg free
   424  001004                     
   425                           ;main.c: 162:     LCD_init();
   426  001004  EC59  F008         	call	_LCD_init	;wreg free
   427  001008                     
   428                           ;main.c: 163:     teclado_init();
   429  001008  EC5A  F009         	call	_teclado_init	;wreg free
   430  00100C                     l1664:
   431                           
   432                           ;main.c: 167:         if(read==0){
   433  00100C  5031               	movf	_read^0,w,c
   434  00100E  A4D8               	btfss	status,2,c
   435  001010  EF0C  F008         	goto	u751
   436  001014  EF0E  F008         	goto	u750
   437  001018                     u751:
   438  001018  EF2A  F008         	goto	l1676
   439  00101C                     u750:
   440  00101C                     
   441                           ;main.c: 168:             LCD_clear();
   442  00101C  EC64  F009         	call	_LCD_clear	;wreg free
   443  001020                     
   444                           ;main.c: 169:             LCD_gotoxy(5, 1);
   445  001020  0E01               	movlw	1
   446  001022  6E02               	movwf	LCD_gotoxy@y^0,c
   447  001024  0E05               	movlw	5
   448  001026  ECA7  F008         	call	_LCD_gotoxy
   449  00102A                     
   450                           ;main.c: 170:             LCD_puts("    STL   ", 8);
   451  00102A  0E10               	movlw	low STR_2
   452  00102C  6E02               	movwf	LCD_puts@data^0,c
   453  00102E  0E08               	movlw	high STR_2
   454  001030  6E03               	movwf	(LCD_puts@data+1)^0,c
   455  001032  0E08               	movlw	8
   456  001034  6E04               	movwf	LCD_puts@nBytes^0,c
   457  001036  EC17  F009         	call	_LCD_puts	;wreg free
   458  00103A                     
   459                           ;main.c: 171:             LCD_gotoxy(2, 2);
   460  00103A  0E02               	movlw	2
   461  00103C  6E02               	movwf	LCD_gotoxy@y^0,c
   462  00103E  0E02               	movlw	2
   463  001040  ECA7  F008         	call	_LCD_gotoxy
   464  001044                     
   465                           ;main.c: 172:             LCD_puts("1.Conf Time   ", 15);
   466  001044  0E01               	movlw	low STR_3
   467  001046  6E02               	movwf	LCD_puts@data^0,c
   468  001048  0E08               	movlw	high STR_3
   469  00104A  6E03               	movwf	(LCD_puts@data+1)^0,c
   470  00104C  0E0F               	movlw	15
   471  00104E  6E04               	movwf	LCD_puts@nBytes^0,c
   472  001050  EC17  F009         	call	_LCD_puts	;wreg free
   473  001054                     l1676:
   474                           
   475                           ;main.c: 175:         TECLADO();
   476  001054  EC96  F006         	call	_TECLADO	;wreg free
   477  001058                     
   478                           ;main.c: 176:         if(K == '1'){
   479  001058  0E31               	movlw	49
   480  00105A  1833               	xorwf	_K^0,w,c
   481  00105C  A4D8               	btfss	status,2,c
   482  00105E  EF33  F008         	goto	u761
   483  001062  EF35  F008         	goto	u760
   484  001066                     u761:
   485  001066  EF06  F008         	goto	l1664
   486  00106A                     u760:
   487  00106A                     
   488                           ;main.c: 177:             LCD_clear();
   489  00106A  EC64  F009         	call	_LCD_clear	;wreg free
   490  00106E                     
   491                           ;main.c: 178:             LCD_gotoxy(1, 1);
   492  00106E  0E01               	movlw	1
   493  001070  6E02               	movwf	LCD_gotoxy@y^0,c
   494  001072  0E01               	movlw	1
   495  001074  ECA7  F008         	call	_LCD_gotoxy
   496  001078                     
   497                           ;main.c: 179:             LCD_puts("Rojo", 5);
   498  001078  0E2A               	movlw	low STR_4
   499  00107A  6E02               	movwf	LCD_puts@data^0,c
   500  00107C  0E08               	movlw	high STR_4
   501  00107E  6E03               	movwf	(LCD_puts@data+1)^0,c
   502  001080  0E05               	movlw	5
   503  001082  6E04               	movwf	LCD_puts@nBytes^0,c
   504  001084  EC17  F009         	call	_LCD_puts	;wreg free
   505  001088                     
   506                           ;main.c: 180:             LCD_gotoxy(1, 2);
   507  001088  0E02               	movlw	2
   508  00108A  6E02               	movwf	LCD_gotoxy@y^0,c
   509  00108C  0E01               	movlw	1
   510  00108E  ECA7  F008         	call	_LCD_gotoxy
   511  001092                     
   512                           ;main.c: 181:             LCD_puts("Amarillo", 8);
   513  001092  0E1B               	movlw	low STR_5
   514  001094  6E02               	movwf	LCD_puts@data^0,c
   515  001096  0E08               	movlw	high STR_5
   516  001098  6E03               	movwf	(LCD_puts@data+1)^0,c
   517  00109A  0E08               	movlw	8
   518  00109C  6E04               	movwf	LCD_puts@nBytes^0,c
   519  00109E  EC17  F009         	call	_LCD_puts	;wreg free
   520  0010A2                     
   521                           ;main.c: 182:             read=1;
   522  0010A2  0E01               	movlw	1
   523  0010A4  6E31               	movwf	_read^0,c
   524  0010A6                     
   525                           ;main.c: 183:             read_time();
   526  0010A6  EC27  F005         	call	_read_time	;wreg free
   527  0010AA  EF06  F008         	goto	l1664
   528  0010AE  EF00  F000         	goto	start
   529  0010B2                     __end_of_main:
   530                           	opt callstack 0
   531                           
   532 ;; *************** function _teclado_init *****************
   533 ;; Defined at:
   534 ;;		line 12 in file "teclado.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;                  1    wreg      void 
   541 ;; Registers used:
   542 ;;		wreg, status,2, status,0
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   548 ;;      Params:         0       0       0       0       0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; This function calls:
   555 ;;		Nothing
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text1
   562  0012B4                     __ptext1:
   563                           	opt callstack 0
   564  0012B4                     _teclado_init:
   565                           	opt callstack 30
   566  0012B4                     
   567                           ;teclado.c: 14:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
   568  0012B4  0EF0               	movlw	240
   569  0012B6  1693               	andwf	147,f,c	;volatile
   570                           
   571                           ;teclado.c: 15:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
   572  0012B8  0EF0               	movlw	240
   573  0012BA  1293               	iorwf	147,f,c	;volatile
   574  0012BC                     
   575                           ;teclado.c: 16:     INTCON2bits.RBPU = 0;
   576  0012BC  9EF1               	bcf	241,7,c	;volatile
   577  0012BE  0012               	return		;funcret
   578  0012C0                     __end_of_teclado_init:
   579                           	opt callstack 0
   580                           
   581 ;; *************** function _read_time *****************
   582 ;; Defined at:
   583 ;;		line 62 in file "main.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;		None
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  num             4   29[COMRAM] long 
   588 ;;  u               4   25[COMRAM] long 
   589 ;;  d               4   21[COMRAM] long 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   599 ;;      Params:         0       0       0       0       0       0       0       0       0
   600 ;;      Locals:        12       0       0       0       0       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0       0       0       0       0
   602 ;;      Totals:        14       0       0       0       0       0       0       0       0
   603 ;;Total ram usage:       14 bytes
   604 ;; Hardware stack levels used:    1
   605 ;; Hardware stack levels required when called:    2
   606 ;; This function calls:
   607 ;;		_LCD_clear
   608 ;;		_LCD_gotoxy
   609 ;;		_LCD_putc
   610 ;;		_LCD_puts
   611 ;;		_TECLADO
   612 ;;		_USART_Tx
   613 ;; This function is called by:
   614 ;;		_main
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           
   618                           	psect	text2
   619  000A4E                     __ptext2:
   620                           	opt callstack 0
   621  000A4E                     _read_time:
   622                           	opt callstack 28
   623  000A4E                     
   624                           ;main.c: 64:     while(read){
   625  000A4E  EF07  F006         	goto	l217
   626  000A52                     l1554:
   627                           
   628                           ;main.c: 65:         TECLADO();
   629  000A52  EC96  F006         	call	_TECLADO	;wreg free
   630                           
   631                           ;main.c: 67:         switch(pos){
   632  000A56  EFCB  F005         	goto	l1620
   633  000A5A                     l1556:
   634                           
   635                           ;main.c: 69:                 LCD_gotoxy(10, 1);
   636  000A5A  0E01               	movlw	1
   637  000A5C  6E02               	movwf	LCD_gotoxy@y^0,c
   638  000A5E  0E0A               	movlw	10
   639  000A60  ECA7  F008         	call	_LCD_gotoxy
   640  000A64                     
   641                           ;main.c: 70:                 LCD_putc(K);
   642  000A64  5033               	movf	_K^0,w,c
   643  000A66  EC87  F007         	call	_LCD_putc
   644  000A6A                     l1560:
   645                           
   646                           ;main.c: 71:                 DEC = VAL;
   647  000A6A  C02E  F030         	movff	_VAL,_DEC
   648  000A6E                     
   649                           ;main.c: 72:                 d = DEC * 10;
   650  000A6E  5030               	movf	_DEC^0,w,c
   651  000A70  0D0A               	mullw	10
   652  000A72  CFF3 F014          	movff	prodl,??_read_time
   653  000A76  CFF4 F015          	movff	prodh,??_read_time+1
   654  000A7A  C014  F016         	movff	??_read_time,read_time@d
   655  000A7E  C015  F017         	movff	??_read_time+1,read_time@d+1
   656  000A82  0E00               	movlw	0
   657  000A84  BE17               	btfsc	(read_time@d+1)^0,7,c
   658  000A86  0EFF               	movlw	-1
   659  000A88  6E18               	movwf	(read_time@d+2)^0,c
   660  000A8A  6E19               	movwf	(read_time@d+3)^0,c
   661                           
   662                           ;main.c: 73:                 break;
   663  000A8C  EFF0  F005         	goto	l1622
   664  000A90                     l1564:
   665                           
   666                           ;main.c: 75:                 LCD_gotoxy(11, 1);
   667  000A90  0E01               	movlw	1
   668  000A92  6E02               	movwf	LCD_gotoxy@y^0,c
   669  000A94  0E0B               	movlw	11
   670  000A96  ECA7  F008         	call	_LCD_gotoxy
   671  000A9A                     
   672                           ;main.c: 76:                 LCD_putc(K);
   673  000A9A  5033               	movf	_K^0,w,c
   674  000A9C  EC87  F007         	call	_LCD_putc
   675  000AA0                     
   676                           ;main.c: 77:                 UNI = VAL;
   677  000AA0  C02E  F02F         	movff	_VAL,_UNI
   678  000AA4                     
   679                           ;main.c: 78:                 u = UNI;
   680  000AA4  502F               	movf	_UNI^0,w,c
   681  000AA6  6E1A               	movwf	read_time@u^0,c
   682  000AA8  6A1B               	clrf	(read_time@u+1)^0,c
   683  000AAA  6A1C               	clrf	(read_time@u+2)^0,c
   684  000AAC  6A1D               	clrf	(read_time@u+3)^0,c
   685                           
   686                           ;main.c: 79:                 num= d + u;
   687  000AAE  501A               	movf	read_time@u^0,w,c
   688  000AB0  2416               	addwf	read_time@d^0,w,c
   689  000AB2  6E1E               	movwf	read_time@num^0,c
   690  000AB4  501B               	movf	(read_time@u+1)^0,w,c
   691  000AB6  2017               	addwfc	(read_time@d+1)^0,w,c
   692  000AB8  6E1F               	movwf	(read_time@num+1)^0,c
   693  000ABA  501C               	movf	(read_time@u+2)^0,w,c
   694  000ABC  2018               	addwfc	(read_time@d+2)^0,w,c
   695  000ABE  6E20               	movwf	(read_time@num+2)^0,c
   696  000AC0  501D               	movf	(read_time@u+3)^0,w,c
   697  000AC2  2019               	addwfc	(read_time@d+3)^0,w,c
   698  000AC4  6E21               	movwf	(read_time@num+3)^0,c
   699  000AC6                     
   700                           ;main.c: 80:                 time[0]=num;
   701  000AC6  C01E  F034         	movff	read_time@num,_time
   702                           
   703                           ;main.c: 81:                 break;
   704  000ACA  EFF0  F005         	goto	l1622
   705  000ACE                     l1574:
   706                           
   707                           ;main.c: 83:                 LCD_gotoxy(10, 2);
   708  000ACE  0E02               	movlw	2
   709  000AD0  6E02               	movwf	LCD_gotoxy@y^0,c
   710  000AD2  0E0A               	movlw	10
   711  000AD4  ECA7  F008         	call	_LCD_gotoxy
   712  000AD8                     
   713                           ;main.c: 84:                 LCD_putc(K);
   714  000AD8  5033               	movf	_K^0,w,c
   715  000ADA  EC87  F007         	call	_LCD_putc
   716  000ADE  EF35  F005         	goto	l1560
   717  000AE2                     l1582:
   718                           
   719                           ;main.c: 89:                 LCD_gotoxy(11, 2);
   720  000AE2  0E02               	movlw	2
   721  000AE4  6E02               	movwf	LCD_gotoxy@y^0,c
   722  000AE6  0E0B               	movlw	11
   723  000AE8  ECA7  F008         	call	_LCD_gotoxy
   724  000AEC                     
   725                           ;main.c: 90:                 LCD_putc(K);
   726  000AEC  5033               	movf	_K^0,w,c
   727  000AEE  EC87  F007         	call	_LCD_putc
   728  000AF2                     
   729                           ;main.c: 91:                 UNI = VAL;
   730  000AF2  C02E  F02F         	movff	_VAL,_UNI
   731  000AF6                     
   732                           ;main.c: 92:                 u = UNI;
   733  000AF6  502F               	movf	_UNI^0,w,c
   734  000AF8  6E1A               	movwf	read_time@u^0,c
   735  000AFA  6A1B               	clrf	(read_time@u+1)^0,c
   736  000AFC  6A1C               	clrf	(read_time@u+2)^0,c
   737  000AFE  6A1D               	clrf	(read_time@u+3)^0,c
   738                           
   739                           ;main.c: 93:                 num= d + u;
   740  000B00  501A               	movf	read_time@u^0,w,c
   741  000B02  2416               	addwf	read_time@d^0,w,c
   742  000B04  6E1E               	movwf	read_time@num^0,c
   743  000B06  501B               	movf	(read_time@u+1)^0,w,c
   744  000B08  2017               	addwfc	(read_time@d+1)^0,w,c
   745  000B0A  6E1F               	movwf	(read_time@num+1)^0,c
   746  000B0C  501C               	movf	(read_time@u+2)^0,w,c
   747  000B0E  2018               	addwfc	(read_time@d+2)^0,w,c
   748  000B10  6E20               	movwf	(read_time@num+2)^0,c
   749  000B12  501D               	movf	(read_time@u+3)^0,w,c
   750  000B14  2019               	addwfc	(read_time@d+3)^0,w,c
   751  000B16  6E21               	movwf	(read_time@num+3)^0,c
   752  000B18                     
   753                           ;main.c: 94:                 time[1]=num;
   754  000B18  C01E  F035         	movff	read_time@num,_time+1
   755                           
   756                           ;main.c: 95:                 break;
   757  000B1C  EFF0  F005         	goto	l1622
   758  000B20                     l1592:
   759                           
   760                           ;main.c: 97:                 LCD_clear();
   761  000B20  EC64  F009         	call	_LCD_clear	;wreg free
   762  000B24                     
   763                           ;main.c: 98:                 LCD_gotoxy(1, 1);
   764  000B24  0E01               	movlw	1
   765  000B26  6E02               	movwf	LCD_gotoxy@y^0,c
   766  000B28  0E01               	movlw	1
   767  000B2A  ECA7  F008         	call	_LCD_gotoxy
   768  000B2E                     
   769                           ;main.c: 99:                 LCD_puts("Verde", 5);
   770  000B2E  0E24               	movlw	low STR_1
   771  000B30  6E02               	movwf	LCD_puts@data^0,c
   772  000B32  0E08               	movlw	high STR_1
   773  000B34  6E03               	movwf	(LCD_puts@data+1)^0,c
   774  000B36  0E05               	movlw	5
   775  000B38  6E04               	movwf	LCD_puts@nBytes^0,c
   776  000B3A  EC17  F009         	call	_LCD_puts	;wreg free
   777  000B3E                     
   778                           ;main.c: 100:                 LCD_gotoxy(10, 1);
   779  000B3E  0E01               	movlw	1
   780  000B40  6E02               	movwf	LCD_gotoxy@y^0,c
   781  000B42  0E0A               	movlw	10
   782  000B44  ECA7  F008         	call	_LCD_gotoxy
   783  000B48                     
   784                           ;main.c: 101:                 LCD_putc(K);
   785  000B48  5033               	movf	_K^0,w,c
   786  000B4A  EC87  F007         	call	_LCD_putc
   787  000B4E  EF35  F005         	goto	l1560
   788  000B52                     l1606:
   789                           
   790                           ;main.c: 106:                 LCD_gotoxy(11, 1);
   791  000B52  0E01               	movlw	1
   792  000B54  6E02               	movwf	LCD_gotoxy@y^0,c
   793  000B56  0E0B               	movlw	11
   794  000B58  ECA7  F008         	call	_LCD_gotoxy
   795  000B5C                     
   796                           ;main.c: 107:                 LCD_putc(K);
   797  000B5C  5033               	movf	_K^0,w,c
   798  000B5E  EC87  F007         	call	_LCD_putc
   799  000B62                     
   800                           ;main.c: 108:                 UNI = VAL;
   801  000B62  C02E  F02F         	movff	_VAL,_UNI
   802  000B66                     
   803                           ;main.c: 109:                 u = UNI;
   804  000B66  502F               	movf	_UNI^0,w,c
   805  000B68  6E1A               	movwf	read_time@u^0,c
   806  000B6A  6A1B               	clrf	(read_time@u+1)^0,c
   807  000B6C  6A1C               	clrf	(read_time@u+2)^0,c
   808  000B6E  6A1D               	clrf	(read_time@u+3)^0,c
   809                           
   810                           ;main.c: 110:                 num= d + u;
   811  000B70  501A               	movf	read_time@u^0,w,c
   812  000B72  2416               	addwf	read_time@d^0,w,c
   813  000B74  6E1E               	movwf	read_time@num^0,c
   814  000B76  501B               	movf	(read_time@u+1)^0,w,c
   815  000B78  2017               	addwfc	(read_time@d+1)^0,w,c
   816  000B7A  6E1F               	movwf	(read_time@num+1)^0,c
   817  000B7C  501C               	movf	(read_time@u+2)^0,w,c
   818  000B7E  2018               	addwfc	(read_time@d+2)^0,w,c
   819  000B80  6E20               	movwf	(read_time@num+2)^0,c
   820  000B82  501D               	movf	(read_time@u+3)^0,w,c
   821  000B84  2019               	addwfc	(read_time@d+3)^0,w,c
   822  000B86  6E21               	movwf	(read_time@num+3)^0,c
   823  000B88                     
   824                           ;main.c: 111:                 time[2]=num;
   825  000B88  C01E  F036         	movff	read_time@num,_time+2
   826  000B8C                     
   827                           ;main.c: 117:                 USART_Tx(time);
   828  000B8C  0E34               	movlw	_time& (0+255)
   829  000B8E  EC60  F009         	call	_USART_Tx
   830                           
   831                           ;main.c: 119:                 break;
   832  000B92  EFF0  F005         	goto	l1622
   833  000B96                     l1620:
   834  000B96  5047               	movf	_pos^0,w,c
   835  000B98  6E14               	movwf	??_read_time^0,c
   836  000B9A  6A15               	clrf	(??_read_time+1)^0,c
   837                           
   838                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   839                           ; Switch size 1, requested type "simple"
   840                           ; Number of cases is 1, Range of values is 0 to 0
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte            4     3 (average)
   844                           ;	Chosen strategy is simple_byte
   845  000B9C  5015               	movf	(??_read_time+1)^0,w,c
   846  000B9E  0A00               	xorlw	0	; case 0
   847  000BA0  B4D8               	btfsc	status,2,c
   848  000BA2  EFD5  F005         	goto	l1702
   849  000BA6  EFF0  F005         	goto	l1622
   850  000BAA                     l1702:
   851                           
   852                           ; Switch size 1, requested type "simple"
   853                           ; Number of cases is 6, Range of values is 1 to 6
   854                           ; switch strategies available:
   855                           ; Name         Instructions Cycles
   856                           ; simple_byte           19    10 (average)
   857                           ;	Chosen strategy is simple_byte
   858  000BAA  5014               	movf	??_read_time^0,w,c
   859  000BAC  0A01               	xorlw	1	; case 1
   860  000BAE  B4D8               	btfsc	status,2,c
   861  000BB0  EF2D  F005         	goto	l1556
   862  000BB4  0A03               	xorlw	3	; case 2
   863  000BB6  B4D8               	btfsc	status,2,c
   864  000BB8  EF48  F005         	goto	l1564
   865  000BBC  0A01               	xorlw	1	; case 3
   866  000BBE  B4D8               	btfsc	status,2,c
   867  000BC0  EF67  F005         	goto	l1574
   868  000BC4  0A07               	xorlw	7	; case 4
   869  000BC6  B4D8               	btfsc	status,2,c
   870  000BC8  EF71  F005         	goto	l1582
   871  000BCC  0A01               	xorlw	1	; case 5
   872  000BCE  B4D8               	btfsc	status,2,c
   873  000BD0  EF90  F005         	goto	l1592
   874  000BD4  0A03               	xorlw	3	; case 6
   875  000BD6  B4D8               	btfsc	status,2,c
   876  000BD8  EFA9  F005         	goto	l1606
   877  000BDC  EFF0  F005         	goto	l1622
   878  000BE0                     l1622:
   879                           
   880                           ;main.c: 122:         pos++;
   881  000BE0  2A47               	incf	_pos^0,f,c
   882  000BE2                     
   883                           ;main.c: 123:         if(pos>6){
   884  000BE2  0E06               	movlw	6
   885  000BE4  6447               	cpfsgt	_pos^0,c
   886  000BE6  EFF7  F005         	goto	u721
   887  000BEA  EFF9  F005         	goto	u720
   888  000BEE                     u721:
   889  000BEE  EFFB  F005         	goto	l1628
   890  000BF2                     u720:
   891  000BF2                     
   892                           ;main.c: 124:             pos=1;
   893  000BF2  0E01               	movlw	1
   894  000BF4  6E47               	movwf	_pos^0,c
   895  000BF6                     l1628:
   896                           
   897                           ;main.c: 126:         i++;
   898  000BF6  2A32               	incf	_i^0,f,c
   899  000BF8                     
   900                           ;main.c: 127:         if (K == '#'){
   901  000BF8  0E23               	movlw	35
   902  000BFA  1833               	xorwf	_K^0,w,c
   903  000BFC  A4D8               	btfss	status,2,c
   904  000BFE  EF03  F006         	goto	u731
   905  000C02  EF05  F006         	goto	u730
   906  000C06                     u731:
   907  000C06  EF07  F006         	goto	l217
   908  000C0A                     u730:
   909  000C0A                     
   910                           ;main.c: 128:             read=0;
   911  000C0A  0E00               	movlw	0
   912  000C0C  6E31               	movwf	_read^0,c
   913  000C0E                     l217:
   914                           
   915                           ;main.c: 64:     while(read){
   916  000C0E  5031               	movf	_read^0,w,c
   917  000C10  A4D8               	btfss	status,2,c
   918  000C12  EF0D  F006         	goto	u741
   919  000C16  EF0F  F006         	goto	u740
   920  000C1A                     u741:
   921  000C1A  EF29  F005         	goto	l1554
   922  000C1E                     u740:
   923  000C1E  0012               	return		;funcret
   924  000C20                     __end_of_read_time:
   925                           	opt callstack 0
   926                           
   927 ;; *************** function _USART_Tx *****************
   928 ;; Defined at:
   929 ;;		line 48 in file "USART_libreria.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;  data            1    wreg     unsigned char 
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  data            1    0[COMRAM] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   943 ;;      Params:         0       0       0       0       0       0       0       0       0
   944 ;;      Locals:         1       0       0       0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0
   946 ;;      Totals:         1       0       0       0       0       0       0       0       0
   947 ;;Total ram usage:        1 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_read_time
   953 ;;		_USART_Cadena
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text3
   958  0012C0                     __ptext3:
   959                           	opt callstack 0
   960  0012C0                     _USART_Tx:
   961                           	opt callstack 29
   962                           
   963                           ;incstack = 0
   964                           ;USART_Tx@data stored from wreg
   965  0012C0  6E01               	movwf	USART_Tx@data^0,c
   966  0012C2                     
   967                           ;USART_libreria.c: 49:     TXREG = data;
   968  0012C2  C001  FFAD         	movff	USART_Tx@data,4013	;volatile
   969  0012C6  0012               	return		;funcret
   970  0012C8                     __end_of_USART_Tx:
   971                           	opt callstack 0
   972                           
   973 ;; *************** function _TECLADO *****************
   974 ;; Defined at:
   975 ;;		line 29 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   989 ;;      Params:         0       0       0       0       0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		_teclado_getc
   998 ;; This function is called by:
   999 ;;		_read_time
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text4
  1005  000D2C                     __ptext4:
  1006                           	opt callstack 0
  1007  000D2C                     _TECLADO:
  1008                           	opt callstack 28
  1009  000D2C                     l1106:
  1010                           
  1011                           ;main.c: 30:     K = teclado_getc();
  1012  000D2C  EC18  F004         	call	_teclado_getc	;wreg free
  1013  000D30  6E33               	movwf	_K^0,c
  1014  000D32                     
  1015                           ;main.c: 34:     while (K == '\0')
  1016  000D32  5033               	movf	_K^0,w,c
  1017  000D34  B4D8               	btfsc	status,2,c
  1018  000D36  EF9F  F006         	goto	u401
  1019  000D3A  EFA1  F006         	goto	u400
  1020  000D3E                     u401:
  1021  000D3E  EF96  F006         	goto	l1106
  1022  000D42                     u400:
  1023  000D42                     
  1024                           ;main.c: 38:     if ((K != '\0')) {
  1025  000D42  5033               	movf	_K^0,w,c
  1026  000D44  B4D8               	btfsc	status,2,c
  1027  000D46  EFA7  F006         	goto	u411
  1028  000D4A  EFA9  F006         	goto	u410
  1029  000D4E                     u411:
  1030  000D4E  EF17  F007         	goto	l214
  1031  000D52                     u410:
  1032  000D52                     
  1033                           ;main.c: 39:         if (K == '0')
  1034  000D52  0E30               	movlw	48
  1035  000D54  1833               	xorwf	_K^0,w,c
  1036  000D56  A4D8               	btfss	status,2,c
  1037  000D58  EFB0  F006         	goto	u421
  1038  000D5C  EFB2  F006         	goto	u420
  1039  000D60                     u421:
  1040  000D60  EFB4  F006         	goto	l1118
  1041  000D64                     u420:
  1042  000D64                     
  1043                           ;main.c: 40:             VAL = 0;
  1044  000D64  0E00               	movlw	0
  1045  000D66  6E2E               	movwf	_VAL^0,c
  1046  000D68                     l1118:
  1047                           
  1048                           ;main.c: 41:         if (K == '1')
  1049  000D68  0E31               	movlw	49
  1050  000D6A  1833               	xorwf	_K^0,w,c
  1051  000D6C  A4D8               	btfss	status,2,c
  1052  000D6E  EFBB  F006         	goto	u431
  1053  000D72  EFBD  F006         	goto	u430
  1054  000D76                     u431:
  1055  000D76  EFBF  F006         	goto	l1122
  1056  000D7A                     u430:
  1057  000D7A                     
  1058                           ;main.c: 42:             VAL = 1;
  1059  000D7A  0E01               	movlw	1
  1060  000D7C  6E2E               	movwf	_VAL^0,c
  1061  000D7E                     l1122:
  1062                           
  1063                           ;main.c: 43:         if (K == '2')
  1064  000D7E  0E32               	movlw	50
  1065  000D80  1833               	xorwf	_K^0,w,c
  1066  000D82  A4D8               	btfss	status,2,c
  1067  000D84  EFC6  F006         	goto	u441
  1068  000D88  EFC8  F006         	goto	u440
  1069  000D8C                     u441:
  1070  000D8C  EFCA  F006         	goto	l1126
  1071  000D90                     u440:
  1072  000D90                     
  1073                           ;main.c: 44:             VAL = 2;
  1074  000D90  0E02               	movlw	2
  1075  000D92  6E2E               	movwf	_VAL^0,c
  1076  000D94                     l1126:
  1077                           
  1078                           ;main.c: 45:         if (K == '3')
  1079  000D94  0E33               	movlw	51
  1080  000D96  1833               	xorwf	_K^0,w,c
  1081  000D98  A4D8               	btfss	status,2,c
  1082  000D9A  EFD1  F006         	goto	u451
  1083  000D9E  EFD3  F006         	goto	u450
  1084  000DA2                     u451:
  1085  000DA2  EFD5  F006         	goto	l1130
  1086  000DA6                     u450:
  1087  000DA6                     
  1088                           ;main.c: 46:             VAL = 3;
  1089  000DA6  0E03               	movlw	3
  1090  000DA8  6E2E               	movwf	_VAL^0,c
  1091  000DAA                     l1130:
  1092                           
  1093                           ;main.c: 47:         if (K == '4')
  1094  000DAA  0E34               	movlw	52
  1095  000DAC  1833               	xorwf	_K^0,w,c
  1096  000DAE  A4D8               	btfss	status,2,c
  1097  000DB0  EFDC  F006         	goto	u461
  1098  000DB4  EFDE  F006         	goto	u460
  1099  000DB8                     u461:
  1100  000DB8  EFE0  F006         	goto	l1134
  1101  000DBC                     u460:
  1102  000DBC                     
  1103                           ;main.c: 48:             VAL = 4;
  1104  000DBC  0E04               	movlw	4
  1105  000DBE  6E2E               	movwf	_VAL^0,c
  1106  000DC0                     l1134:
  1107                           
  1108                           ;main.c: 49:         if (K == '5')
  1109  000DC0  0E35               	movlw	53
  1110  000DC2  1833               	xorwf	_K^0,w,c
  1111  000DC4  A4D8               	btfss	status,2,c
  1112  000DC6  EFE7  F006         	goto	u471
  1113  000DCA  EFE9  F006         	goto	u470
  1114  000DCE                     u471:
  1115  000DCE  EFEB  F006         	goto	l1138
  1116  000DD2                     u470:
  1117  000DD2                     
  1118                           ;main.c: 50:             VAL = 5;
  1119  000DD2  0E05               	movlw	5
  1120  000DD4  6E2E               	movwf	_VAL^0,c
  1121  000DD6                     l1138:
  1122                           
  1123                           ;main.c: 51:         if (K == '6')
  1124  000DD6  0E36               	movlw	54
  1125  000DD8  1833               	xorwf	_K^0,w,c
  1126  000DDA  A4D8               	btfss	status,2,c
  1127  000DDC  EFF2  F006         	goto	u481
  1128  000DE0  EFF4  F006         	goto	u480
  1129  000DE4                     u481:
  1130  000DE4  EFF6  F006         	goto	l1142
  1131  000DE8                     u480:
  1132  000DE8                     
  1133                           ;main.c: 52:             VAL = 6;
  1134  000DE8  0E06               	movlw	6
  1135  000DEA  6E2E               	movwf	_VAL^0,c
  1136  000DEC                     l1142:
  1137                           
  1138                           ;main.c: 53:         if (K == '7')
  1139  000DEC  0E37               	movlw	55
  1140  000DEE  1833               	xorwf	_K^0,w,c
  1141  000DF0  A4D8               	btfss	status,2,c
  1142  000DF2  EFFD  F006         	goto	u491
  1143  000DF6  EFFF  F006         	goto	u490
  1144  000DFA                     u491:
  1145  000DFA  EF01  F007         	goto	l1146
  1146  000DFE                     u490:
  1147  000DFE                     
  1148                           ;main.c: 54:             VAL = 7;
  1149  000DFE  0E07               	movlw	7
  1150  000E00  6E2E               	movwf	_VAL^0,c
  1151  000E02                     l1146:
  1152                           
  1153                           ;main.c: 55:         if (K == '8')
  1154  000E02  0E38               	movlw	56
  1155  000E04  1833               	xorwf	_K^0,w,c
  1156  000E06  A4D8               	btfss	status,2,c
  1157  000E08  EF08  F007         	goto	u501
  1158  000E0C  EF0A  F007         	goto	u500
  1159  000E10                     u501:
  1160  000E10  EF0C  F007         	goto	l1150
  1161  000E14                     u500:
  1162  000E14                     
  1163                           ;main.c: 56:             VAL = 8;
  1164  000E14  0E08               	movlw	8
  1165  000E16  6E2E               	movwf	_VAL^0,c
  1166  000E18                     l1150:
  1167                           
  1168                           ;main.c: 57:         if (K == '9')
  1169  000E18  0E39               	movlw	57
  1170  000E1A  1833               	xorwf	_K^0,w,c
  1171  000E1C  A4D8               	btfss	status,2,c
  1172  000E1E  EF13  F007         	goto	u511
  1173  000E22  EF15  F007         	goto	u510
  1174  000E26                     u511:
  1175  000E26  EF17  F007         	goto	l214
  1176  000E2A                     u510:
  1177  000E2A                     
  1178                           ;main.c: 58:             VAL = 9;
  1179  000E2A  0E09               	movlw	9
  1180  000E2C  6E2E               	movwf	_VAL^0,c
  1181  000E2E                     l214:
  1182  000E2E  0012               	return		;funcret
  1183  000E30                     __end_of_TECLADO:
  1184                           	opt callstack 0
  1185                           
  1186 ;; *************** function _teclado_getc *****************
  1187 ;; Defined at:
  1188 ;;		line 19 in file "teclado.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  letras         16    0[COMRAM] unsigned char [4][4]
  1193 ;;  i               2   17[COMRAM] int 
  1194 ;;  valor           1   16[COMRAM] unsigned char 
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      unsigned char 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1204 ;;      Params:         0       0       0       0       0       0       0       0       0
  1205 ;;      Locals:        19       0       0       0       0       0       0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1207 ;;      Totals:        19       0       0       0       0       0       0       0       0
  1208 ;;Total ram usage:       19 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_TECLADO
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text5
  1218  000830                     __ptext5:
  1219                           	opt callstack 0
  1220  000830                     _teclado_getc:
  1221                           	opt callstack 28
  1222  000830                     
  1223                           ;teclado.c: 21: char letras[4][4]={ {'1','2','3','A'},
  1224  000830  EE20  F037         	lfsr	2,teclado_getc@F3164
  1225  000834  EE10  F001         	lfsr	1,teclado_getc@letras
  1226  000838  0E0F               	movlw	15
  1227  00083A                     u171:
  1228  00083A  CFDB FFE3          	movff	plusw2,plusw1
  1229  00083E  06E8               	decf	wreg,f,c
  1230  000840  E2FC               	bc	u171
  1231  000842                     
  1232                           ;teclado.c: 26: char valor=0;
  1233  000842  0E00               	movlw	0
  1234  000844  6E11               	movwf	teclado_getc@valor^0,c
  1235  000846                     
  1236                           ;teclado.c: 28: for(i=0;i<4;i++){
  1237  000846  0E00               	movlw	0
  1238  000848  6E13               	movwf	(teclado_getc@i+1)^0,c
  1239  00084A  0E00               	movlw	0
  1240  00084C  6E12               	movwf	teclado_getc@i^0,c
  1241  00084E                     l1042:
  1242                           
  1243                           ;teclado.c: 30:    if(i==0){
  1244  00084E  5012               	movf	teclado_getc@i^0,w,c
  1245  000850  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1246  000852  A4D8               	btfss	status,2,c
  1247  000854  EF2E  F004         	goto	u181
  1248  000858  EF30  F004         	goto	u180
  1249  00085C                     u181:
  1250  00085C  EF62  F004         	goto	l1048
  1251  000860                     u180:
  1252  000860                     
  1253                           ;teclado.c: 32:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1254  000860  0EFE               	movlw	254
  1255  000862  6E8A               	movwf	138,c	;volatile
  1256  000864                     
  1257                           ;teclado.c: 33:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1258  000864  0EA6               	movlw	166
  1259  000866                     u777:
  1260  000866  2EE8               	decfsz	wreg,f,c
  1261  000868  D7FE               	bra	u777
  1262  00086A  D000               	nop2	
  1263                           
  1264                           ;teclado.c: 34:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1265  00086C  EF3A  F004         	goto	l94
  1266  000870                     l95:
  1267  000870  C001  F011         	movff	teclado_getc@letras,teclado_getc@valor
  1268  000874                     l94:
  1269  000874  A881               	btfss	129,4,c	;volatile
  1270  000876  EF3F  F004         	goto	u191
  1271  00087A  EF41  F004         	goto	u190
  1272  00087E                     u191:
  1273  00087E  EF38  F004         	goto	l95
  1274  000882                     u190:
  1275  000882  EF45  F004         	goto	l97
  1276  000886                     l98:
  1277  000886  C002  F011         	movff	teclado_getc@letras+1,teclado_getc@valor
  1278  00088A                     l97:
  1279  00088A  AA81               	btfss	129,5,c	;volatile
  1280  00088C  EF4A  F004         	goto	u201
  1281  000890  EF4C  F004         	goto	u200
  1282  000894                     u201:
  1283  000894  EF43  F004         	goto	l98
  1284  000898                     u200:
  1285  000898  EF50  F004         	goto	l100
  1286  00089C                     l101:
  1287  00089C  C003  F011         	movff	teclado_getc@letras+2,teclado_getc@valor
  1288  0008A0                     l100:
  1289  0008A0  AC81               	btfss	129,6,c	;volatile
  1290  0008A2  EF55  F004         	goto	u211
  1291  0008A6  EF57  F004         	goto	u210
  1292  0008AA                     u211:
  1293  0008AA  EF4E  F004         	goto	l101
  1294  0008AE                     u210:
  1295  0008AE  EF5B  F004         	goto	l103
  1296  0008B2                     l104:
  1297  0008B2  C004  F011         	movff	teclado_getc@letras+3,teclado_getc@valor
  1298  0008B6                     l103:
  1299  0008B6  AE81               	btfss	129,7,c	;volatile
  1300  0008B8  EF60  F004         	goto	u221
  1301  0008BC  EF62  F004         	goto	u220
  1302  0008C0                     u221:
  1303  0008C0  EF59  F004         	goto	l104
  1304  0008C4                     u220:
  1305  0008C4                     l1048:
  1306                           
  1307                           ;teclado.c: 40:    if(i==1){
  1308  0008C4  0412               	decf	teclado_getc@i^0,w,c
  1309  0008C6  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1310  0008C8  A4D8               	btfss	status,2,c
  1311  0008CA  EF69  F004         	goto	u231
  1312  0008CE  EF6B  F004         	goto	u230
  1313  0008D2                     u231:
  1314  0008D2  EF9D  F004         	goto	l1054
  1315  0008D6                     u230:
  1316  0008D6                     
  1317                           ;teclado.c: 41:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1318  0008D6  0EFD               	movlw	253
  1319  0008D8  6E8A               	movwf	138,c	;volatile
  1320  0008DA                     
  1321                           ;teclado.c: 42:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1322  0008DA  0EA6               	movlw	166
  1323  0008DC                     u787:
  1324  0008DC  2EE8               	decfsz	wreg,f,c
  1325  0008DE  D7FE               	bra	u787
  1326  0008E0  D000               	nop2	
  1327                           
  1328                           ;teclado.c: 43:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1329  0008E2  EF75  F004         	goto	l107
  1330  0008E6                     l108:
  1331  0008E6  C005  F011         	movff	teclado_getc@letras+4,teclado_getc@valor
  1332  0008EA                     l107:
  1333  0008EA  A881               	btfss	129,4,c	;volatile
  1334  0008EC  EF7A  F004         	goto	u241
  1335  0008F0  EF7C  F004         	goto	u240
  1336  0008F4                     u241:
  1337  0008F4  EF73  F004         	goto	l108
  1338  0008F8                     u240:
  1339  0008F8  EF80  F004         	goto	l110
  1340  0008FC                     l111:
  1341  0008FC  C006  F011         	movff	teclado_getc@letras+5,teclado_getc@valor
  1342  000900                     l110:
  1343  000900  AA81               	btfss	129,5,c	;volatile
  1344  000902  EF85  F004         	goto	u251
  1345  000906  EF87  F004         	goto	u250
  1346  00090A                     u251:
  1347  00090A  EF7E  F004         	goto	l111
  1348  00090E                     u250:
  1349  00090E  EF8B  F004         	goto	l113
  1350  000912                     l114:
  1351  000912  C007  F011         	movff	teclado_getc@letras+6,teclado_getc@valor
  1352  000916                     l113:
  1353  000916  AC81               	btfss	129,6,c	;volatile
  1354  000918  EF90  F004         	goto	u261
  1355  00091C  EF92  F004         	goto	u260
  1356  000920                     u261:
  1357  000920  EF89  F004         	goto	l114
  1358  000924                     u260:
  1359  000924  EF96  F004         	goto	l116
  1360  000928                     l117:
  1361  000928  C008  F011         	movff	teclado_getc@letras+7,teclado_getc@valor
  1362  00092C                     l116:
  1363  00092C  AE81               	btfss	129,7,c	;volatile
  1364  00092E  EF9B  F004         	goto	u271
  1365  000932  EF9D  F004         	goto	u270
  1366  000936                     u271:
  1367  000936  EF94  F004         	goto	l117
  1368  00093A                     u270:
  1369  00093A                     l1054:
  1370                           
  1371                           ;teclado.c: 49:    if(i==2){
  1372  00093A  0E02               	movlw	2
  1373  00093C  1812               	xorwf	teclado_getc@i^0,w,c
  1374  00093E  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1375  000940  A4D8               	btfss	status,2,c
  1376  000942  EFA5  F004         	goto	u281
  1377  000946  EFA7  F004         	goto	u280
  1378  00094A                     u281:
  1379  00094A  EFD9  F004         	goto	l1060
  1380  00094E                     u280:
  1381  00094E                     
  1382                           ;teclado.c: 50:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1383  00094E  0EFB               	movlw	251
  1384  000950  6E8A               	movwf	138,c	;volatile
  1385  000952                     
  1386                           ;teclado.c: 51:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1387  000952  0EA6               	movlw	166
  1388  000954                     u797:
  1389  000954  2EE8               	decfsz	wreg,f,c
  1390  000956  D7FE               	bra	u797
  1391  000958  D000               	nop2	
  1392                           
  1393                           ;teclado.c: 52:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1394  00095A  EFB1  F004         	goto	l120
  1395  00095E                     l121:
  1396  00095E  C009  F011         	movff	teclado_getc@letras+8,teclado_getc@valor
  1397  000962                     l120:
  1398  000962  A881               	btfss	129,4,c	;volatile
  1399  000964  EFB6  F004         	goto	u291
  1400  000968  EFB8  F004         	goto	u290
  1401  00096C                     u291:
  1402  00096C  EFAF  F004         	goto	l121
  1403  000970                     u290:
  1404  000970  EFBC  F004         	goto	l123
  1405  000974                     l124:
  1406  000974  C00A  F011         	movff	teclado_getc@letras+9,teclado_getc@valor
  1407  000978                     l123:
  1408  000978  AA81               	btfss	129,5,c	;volatile
  1409  00097A  EFC1  F004         	goto	u301
  1410  00097E  EFC3  F004         	goto	u300
  1411  000982                     u301:
  1412  000982  EFBA  F004         	goto	l124
  1413  000986                     u300:
  1414  000986  EFC7  F004         	goto	l126
  1415  00098A                     l127:
  1416  00098A  C00B  F011         	movff	teclado_getc@letras+10,teclado_getc@valor
  1417  00098E                     l126:
  1418  00098E  AC81               	btfss	129,6,c	;volatile
  1419  000990  EFCC  F004         	goto	u311
  1420  000994  EFCE  F004         	goto	u310
  1421  000998                     u311:
  1422  000998  EFC5  F004         	goto	l127
  1423  00099C                     u310:
  1424  00099C  EFD2  F004         	goto	l129
  1425  0009A0                     l130:
  1426  0009A0  C00C  F011         	movff	teclado_getc@letras+11,teclado_getc@valor
  1427  0009A4                     l129:
  1428  0009A4  AE81               	btfss	129,7,c	;volatile
  1429  0009A6  EFD7  F004         	goto	u321
  1430  0009AA  EFD9  F004         	goto	u320
  1431  0009AE                     u321:
  1432  0009AE  EFD0  F004         	goto	l130
  1433  0009B2                     u320:
  1434  0009B2                     l1060:
  1435                           
  1436                           ;teclado.c: 58:    if(i==3){
  1437  0009B2  0E03               	movlw	3
  1438  0009B4  1812               	xorwf	teclado_getc@i^0,w,c
  1439  0009B6  1013               	iorwf	(teclado_getc@i+1)^0,w,c
  1440  0009B8  A4D8               	btfss	status,2,c
  1441  0009BA  EFE1  F004         	goto	u331
  1442  0009BE  EFE3  F004         	goto	u330
  1443  0009C2                     u331:
  1444  0009C2  EF15  F005         	goto	l1066
  1445  0009C6                     u330:
  1446  0009C6                     
  1447                           ;teclado.c: 59:       LATB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1448  0009C6  0EF7               	movlw	247
  1449  0009C8  6E8A               	movwf	138,c	;volatile
  1450  0009CA                     
  1451                           ;teclado.c: 60:       _delay((unsigned long)((100)*(20000000UL/4000000.0)));
  1452  0009CA  0EA6               	movlw	166
  1453  0009CC                     u807:
  1454  0009CC  2EE8               	decfsz	wreg,f,c
  1455  0009CE  D7FE               	bra	u807
  1456  0009D0  D000               	nop2	
  1457                           
  1458                           ;teclado.c: 61:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1459  0009D2  EFED  F004         	goto	l133
  1460  0009D6                     l134:
  1461  0009D6  C00D  F011         	movff	teclado_getc@letras+12,teclado_getc@valor
  1462  0009DA                     l133:
  1463  0009DA  A881               	btfss	129,4,c	;volatile
  1464  0009DC  EFF2  F004         	goto	u341
  1465  0009E0  EFF4  F004         	goto	u340
  1466  0009E4                     u341:
  1467  0009E4  EFEB  F004         	goto	l134
  1468  0009E8                     u340:
  1469  0009E8  EFF8  F004         	goto	l136
  1470  0009EC                     l137:
  1471  0009EC  C00E  F011         	movff	teclado_getc@letras+13,teclado_getc@valor
  1472  0009F0                     l136:
  1473  0009F0  AA81               	btfss	129,5,c	;volatile
  1474  0009F2  EFFD  F004         	goto	u351
  1475  0009F6  EFFF  F004         	goto	u350
  1476  0009FA                     u351:
  1477  0009FA  EFF6  F004         	goto	l137
  1478  0009FE                     u350:
  1479  0009FE  EF03  F005         	goto	l139
  1480  000A02                     l140:
  1481  000A02  C00F  F011         	movff	teclado_getc@letras+14,teclado_getc@valor
  1482  000A06                     l139:
  1483  000A06  AC81               	btfss	129,6,c	;volatile
  1484  000A08  EF08  F005         	goto	u361
  1485  000A0C  EF0A  F005         	goto	u360
  1486  000A10                     u361:
  1487  000A10  EF01  F005         	goto	l140
  1488  000A14                     u360:
  1489  000A14  EF0E  F005         	goto	l142
  1490  000A18                     l143:
  1491  000A18  C010  F011         	movff	teclado_getc@letras+15,teclado_getc@valor
  1492  000A1C                     l142:
  1493  000A1C  AE81               	btfss	129,7,c	;volatile
  1494  000A1E  EF13  F005         	goto	u371
  1495  000A22  EF15  F005         	goto	u370
  1496  000A26                     u371:
  1497  000A26  EF0C  F005         	goto	l143
  1498  000A2A                     u370:
  1499  000A2A                     l1066:
  1500                           
  1501                           ;teclado.c: 66:    }
  1502  000A2A  4A12               	infsnz	teclado_getc@i^0,f,c
  1503  000A2C  2A13               	incf	(teclado_getc@i+1)^0,f,c
  1504  000A2E  BE13               	btfsc	(teclado_getc@i+1)^0,7,c
  1505  000A30  EF23  F005         	goto	u381
  1506  000A34  5013               	movf	(teclado_getc@i+1)^0,w,c
  1507  000A36  E109               	bnz	u380
  1508  000A38  0E04               	movlw	4
  1509  000A3A  5C12               	subwf	teclado_getc@i^0,w,c
  1510  000A3C  A0D8               	btfss	status,0,c
  1511  000A3E  EF23  F005         	goto	u381
  1512  000A42  EF25  F005         	goto	u380
  1513  000A46                     u381:
  1514  000A46  EF27  F004         	goto	l1042
  1515  000A4A                     u380:
  1516  000A4A                     
  1517                           ;teclado.c: 68:    return valor;
  1518  000A4A  5011               	movf	teclado_getc@valor^0,w,c
  1519  000A4C  0012               	return		;funcret
  1520  000A4E                     __end_of_teclado_getc:
  1521                           	opt callstack 0
  1522                           
  1523 ;; *************** function _LCD_puts *****************
  1524 ;; Defined at:
  1525 ;;		line 164 in file "lcd.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  data            2    1[COMRAM] PTR unsigned char 
  1528 ;;		 -> STR_5(9), STR_4(5), STR_3(15), STR_2(11), 
  1529 ;;		 -> STR_1(6), 
  1530 ;;  nBytes          1    3[COMRAM] unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  i               1    6[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1542 ;;      Params:         3       0       0       0       0       0       0       0       0
  1543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1544 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1545 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1546 ;;Total ram usage:        6 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    1
  1549 ;; This function calls:
  1550 ;;		_LCD_putc
  1551 ;; This function is called by:
  1552 ;;		_read_time
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  00122E                     __ptext6:
  1559                           	opt callstack 0
  1560  00122E                     _LCD_puts:
  1561                           	opt callstack 28
  1562  00122E                     
  1563                           ;lcd.c: 165:  register unsigned char i=0;
  1564  00122E  0E00               	movlw	0
  1565  001230  6E07               	movwf	LCD_puts@i^0,c
  1566                           
  1567                           ;lcd.c: 167:  for(i=0; i<nBytes; i++){
  1568  001232  0E00               	movlw	0
  1569  001234  6E07               	movwf	LCD_puts@i^0,c
  1570  001236  EF2C  F009         	goto	l1484
  1571  00123A                     l1480:
  1572                           
  1573                           ;lcd.c: 168:   LCD_putc(data[i]);
  1574  00123A  5007               	movf	LCD_puts@i^0,w,c
  1575  00123C  2402               	addwf	LCD_puts@data^0,w,c
  1576  00123E  6E05               	movwf	??_LCD_puts^0,c
  1577  001240  0E00               	movlw	0
  1578  001242  2003               	addwfc	(LCD_puts@data+1)^0,w,c
  1579  001244  6E06               	movwf	(??_LCD_puts+1)^0,c
  1580  001246  C005  FFF6         	movff	??_LCD_puts,tblptrl
  1581  00124A  C006  FFF7         	movff	??_LCD_puts+1,tblptrh
  1582  00124E                     	if	0	;tblptru may be non-zero
  1583  00124E                     	endif
  1584  00124E                     	if	0	;tblptru may be non-zero
  1585  00124E                     	endif
  1586  00124E  0008               	tblrd		*
  1587  001250  50F5               	movf	tablat,w,c
  1588  001252  EC87  F007         	call	_LCD_putc
  1589  001256                     
  1590                           ;lcd.c: 169:  }
  1591  001256  2A07               	incf	LCD_puts@i^0,f,c
  1592  001258                     l1484:
  1593  001258  5004               	movf	LCD_puts@nBytes^0,w,c
  1594  00125A  5C07               	subwf	LCD_puts@i^0,w,c
  1595  00125C  A0D8               	btfss	status,0,c
  1596  00125E  EF33  F009         	goto	u651
  1597  001262  EF35  F009         	goto	u650
  1598  001266                     u651:
  1599  001266  EF1D  F009         	goto	l1480
  1600  00126A                     u650:
  1601  00126A  0012               	return		;funcret
  1602  00126C                     __end_of_LCD_puts:
  1603                           	opt callstack 0
  1604                           
  1605 ;; *************** function _LCD_putc *****************
  1606 ;; Defined at:
  1607 ;;		line 11 in file "lcd.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  ch              1    wreg     unsigned char 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  ch              1    0[COMRAM] unsigned char 
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0
  1622 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1624 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1625 ;;Total ram usage:        1 bytes
  1626 ;; Hardware stack levels used:    1
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_LCD_puts
  1631 ;;		_read_time
  1632 ;;		_LCD_definechar
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text7
  1637  000F0E                     __ptext7:
  1638                           	opt callstack 0
  1639  000F0E                     _LCD_putc:
  1640                           	opt callstack 28
  1641                           
  1642                           ;incstack = 0
  1643                           ;LCD_putc@ch stored from wreg
  1644  000F0E  6E01               	movwf	LCD_putc@ch^0,c
  1645  000F10                     
  1646                           ;lcd.c: 13:     LATDbits.LATD0 = 1;
  1647  000F10  808C               	bsf	140,0,c	;volatile
  1648  000F12                     
  1649                           ;lcd.c: 15:     if ( ch & 0x10 ) {
  1650  000F12  A801               	btfss	LCD_putc@ch^0,4,c
  1651  000F14  EF8E  F007         	goto	u11
  1652  000F18  EF90  F007         	goto	u10
  1653  000F1C                     u11:
  1654  000F1C  EF93  F007         	goto	l11
  1655  000F20                     u10:
  1656  000F20                     
  1657                           ;lcd.c: 16:         LATDbits.LATD4 = 1;
  1658  000F20  888C               	bsf	140,4,c	;volatile
  1659                           
  1660                           ;lcd.c: 17:  } else {
  1661  000F22  EF94  F007         	goto	l952
  1662  000F26                     l11:
  1663                           
  1664                           ;lcd.c: 18:         LATDbits.LATD4 = 0;
  1665  000F26  988C               	bcf	140,4,c	;volatile
  1666  000F28                     l952:
  1667                           
  1668                           ;lcd.c: 20:  if ( ch & 0x20 ) {
  1669  000F28  AA01               	btfss	LCD_putc@ch^0,5,c
  1670  000F2A  EF99  F007         	goto	u21
  1671  000F2E  EF9B  F007         	goto	u20
  1672  000F32                     u21:
  1673  000F32  EF9E  F007         	goto	l13
  1674  000F36                     u20:
  1675  000F36                     
  1676                           ;lcd.c: 21:         LATDbits.LATD5 = 1;
  1677  000F36  8A8C               	bsf	140,5,c	;volatile
  1678                           
  1679                           ;lcd.c: 22:  } else {
  1680  000F38  EF9F  F007         	goto	l956
  1681  000F3C                     l13:
  1682                           
  1683                           ;lcd.c: 23:         LATDbits.LATD5 = 0;
  1684  000F3C  9A8C               	bcf	140,5,c	;volatile
  1685  000F3E                     l956:
  1686                           
  1687                           ;lcd.c: 25:  if ( ch & 0x40 ) {
  1688  000F3E  AC01               	btfss	LCD_putc@ch^0,6,c
  1689  000F40  EFA4  F007         	goto	u31
  1690  000F44  EFA6  F007         	goto	u30
  1691  000F48                     u31:
  1692  000F48  EFA9  F007         	goto	l15
  1693  000F4C                     u30:
  1694  000F4C                     
  1695                           ;lcd.c: 26:         LATDbits.LATD6 = 1;
  1696  000F4C  8C8C               	bsf	140,6,c	;volatile
  1697                           
  1698                           ;lcd.c: 27:  } else {
  1699  000F4E  EFAA  F007         	goto	l960
  1700  000F52                     l15:
  1701                           
  1702                           ;lcd.c: 28:         LATDbits.LATD6 = 0;
  1703  000F52  9C8C               	bcf	140,6,c	;volatile
  1704  000F54                     l960:
  1705                           
  1706                           ;lcd.c: 30:  if ( ch & 0x80 ) {
  1707  000F54  AE01               	btfss	LCD_putc@ch^0,7,c
  1708  000F56  EFAF  F007         	goto	u41
  1709  000F5A  EFB1  F007         	goto	u40
  1710  000F5E                     u41:
  1711  000F5E  EFB4  F007         	goto	l17
  1712  000F62                     u40:
  1713  000F62                     
  1714                           ;lcd.c: 31:         LATDbits.LATD7 = 1;
  1715  000F62  8E8C               	bsf	140,7,c	;volatile
  1716                           
  1717                           ;lcd.c: 32:  } else {
  1718  000F64  EFB5  F007         	goto	l18
  1719  000F68                     l17:
  1720                           
  1721                           ;lcd.c: 33:         LATDbits.LATD7 = 0;
  1722  000F68  9E8C               	bcf	140,7,c	;volatile
  1723  000F6A                     l18:
  1724                           
  1725                           ;lcd.c: 36:     LATDbits.LATD2 = 1;
  1726  000F6A  848C               	bsf	140,2,c	;volatile
  1727  000F6C                     
  1728                           ;lcd.c: 37:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1729  000F6C  0E64               	movlw	100
  1730  000F6E                     u817:
  1731  000F6E  2EE8               	decfsz	wreg,f,c
  1732  000F70  D7FE               	bra	u817
  1733  000F72                     
  1734                           ;lcd.c: 38:     LATDbits.LATD2 = 0;
  1735  000F72  948C               	bcf	140,2,c	;volatile
  1736                           
  1737                           ;lcd.c: 39:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1738  000F74  0E64               	movlw	100
  1739  000F76                     u827:
  1740  000F76  2EE8               	decfsz	wreg,f,c
  1741  000F78  D7FE               	bra	u827
  1742  000F7A                     
  1743                           ;lcd.c: 41:     if ( ch & 0x01 ) {
  1744  000F7A  A001               	btfss	LCD_putc@ch^0,0,c
  1745  000F7C  EFC2  F007         	goto	u51
  1746  000F80  EFC4  F007         	goto	u50
  1747  000F84                     u51:
  1748  000F84  EFC7  F007         	goto	l19
  1749  000F88                     u50:
  1750  000F88                     
  1751                           ;lcd.c: 42:         LATDbits.LATD4 = 1;
  1752  000F88  888C               	bsf	140,4,c	;volatile
  1753                           
  1754                           ;lcd.c: 43:  } else {
  1755  000F8A  EFC8  F007         	goto	l972
  1756  000F8E                     l19:
  1757                           
  1758                           ;lcd.c: 44:         LATDbits.LATD4 = 0;
  1759  000F8E  988C               	bcf	140,4,c	;volatile
  1760  000F90                     l972:
  1761                           
  1762                           ;lcd.c: 46:  if ( ch & 0x02 ) {
  1763  000F90  A201               	btfss	LCD_putc@ch^0,1,c
  1764  000F92  EFCD  F007         	goto	u61
  1765  000F96  EFCF  F007         	goto	u60
  1766  000F9A                     u61:
  1767  000F9A  EFD2  F007         	goto	l21
  1768  000F9E                     u60:
  1769  000F9E                     
  1770                           ;lcd.c: 47:         LATDbits.LATD5 = 1;
  1771  000F9E  8A8C               	bsf	140,5,c	;volatile
  1772                           
  1773                           ;lcd.c: 48:  } else {
  1774  000FA0  EFD3  F007         	goto	l976
  1775  000FA4                     l21:
  1776                           
  1777                           ;lcd.c: 49:         LATDbits.LATD5 = 0;
  1778  000FA4  9A8C               	bcf	140,5,c	;volatile
  1779  000FA6                     l976:
  1780                           
  1781                           ;lcd.c: 51:  if ( ch & 0x04 ) {
  1782  000FA6  A401               	btfss	LCD_putc@ch^0,2,c
  1783  000FA8  EFD8  F007         	goto	u71
  1784  000FAC  EFDA  F007         	goto	u70
  1785  000FB0                     u71:
  1786  000FB0  EFDD  F007         	goto	l23
  1787  000FB4                     u70:
  1788  000FB4                     
  1789                           ;lcd.c: 52:         LATDbits.LATD6 = 1;
  1790  000FB4  8C8C               	bsf	140,6,c	;volatile
  1791                           
  1792                           ;lcd.c: 53:  } else {
  1793  000FB6  EFDE  F007         	goto	l980
  1794  000FBA                     l23:
  1795                           
  1796                           ;lcd.c: 54:         LATDbits.LATD6 = 0;
  1797  000FBA  9C8C               	bcf	140,6,c	;volatile
  1798  000FBC                     l980:
  1799                           
  1800                           ;lcd.c: 56:  if ( ch & 0x08 ) {
  1801  000FBC  A601               	btfss	LCD_putc@ch^0,3,c
  1802  000FBE  EFE3  F007         	goto	u81
  1803  000FC2  EFE5  F007         	goto	u80
  1804  000FC6                     u81:
  1805  000FC6  EFE8  F007         	goto	l25
  1806  000FCA                     u80:
  1807  000FCA                     
  1808                           ;lcd.c: 57:         LATDbits.LATD7 = 1;
  1809  000FCA  8E8C               	bsf	140,7,c	;volatile
  1810                           
  1811                           ;lcd.c: 58:  } else {
  1812  000FCC  EFE9  F007         	goto	l26
  1813  000FD0                     l25:
  1814                           
  1815                           ;lcd.c: 59:         LATDbits.LATD7 = 0;
  1816  000FD0  9E8C               	bcf	140,7,c	;volatile
  1817  000FD2                     l26:
  1818                           
  1819                           ;lcd.c: 62:     LATDbits.LATD2 = 1;
  1820  000FD2  848C               	bsf	140,2,c	;volatile
  1821  000FD4                     
  1822                           ;lcd.c: 63:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1823  000FD4  0E64               	movlw	100
  1824  000FD6                     u837:
  1825  000FD6  2EE8               	decfsz	wreg,f,c
  1826  000FD8  D7FE               	bra	u837
  1827  000FDA                     
  1828                           ;lcd.c: 64:     LATDbits.LATD2 = 0;
  1829  000FDA  948C               	bcf	140,2,c	;volatile
  1830                           
  1831                           ;lcd.c: 65:     _delay((unsigned long)((300)*(4000000/4000000.0)));
  1832  000FDC  0E64               	movlw	100
  1833  000FDE                     u847:
  1834  000FDE  2EE8               	decfsz	wreg,f,c
  1835  000FE0  D7FE               	bra	u847
  1836  000FE2  0012               	return		;funcret
  1837  000FE4                     __end_of_LCD_putc:
  1838                           	opt callstack 0
  1839                           
  1840 ;; *************** function _LCD_gotoxy *****************
  1841 ;; Defined at:
  1842 ;;		line 172 in file "lcd.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  x               1    wreg     unsigned char 
  1845 ;;  y               1    1[COMRAM] unsigned char 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  x               1    5[COMRAM] unsigned char 
  1848 ;;  DDRAMAddr       1    4[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         1       0       0       0       0       0       0       0       0
  1859 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1860 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1861 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1862 ;;Total ram usage:        5 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    1
  1865 ;; This function calls:
  1866 ;;		_LCD_command
  1867 ;; This function is called by:
  1868 ;;		_read_time
  1869 ;;		_main
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text8
  1874  00114E                     __ptext8:
  1875                           	opt callstack 0
  1876  00114E                     _LCD_gotoxy:
  1877                           	opt callstack 28
  1878                           
  1879                           ;incstack = 0
  1880                           ;LCD_gotoxy@x stored from wreg
  1881  00114E  6E06               	movwf	LCD_gotoxy@x^0,c
  1882  001150                     
  1883                           ;lcd.c: 173:  register unsigned char DDRAMAddr;;lcd.c: 175:  switch(y){
  1884  001150  EFBD  F008         	goto	l1500
  1885  001154                     l1488:
  1886  001154  0406               	decf	LCD_gotoxy@x^0,w,c
  1887  001156  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  1888  001158  EFDA  F008         	goto	l1502
  1889  00115C                     l1490:
  1890  00115C  5006               	movf	LCD_gotoxy@x^0,w,c
  1891  00115E  0F3F               	addlw	63
  1892  001160  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  1893  001162  EFDA  F008         	goto	l1502
  1894  001166                     l1492:
  1895  001166  5006               	movf	LCD_gotoxy@x^0,w,c
  1896  001168  0F13               	addlw	19
  1897  00116A  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  1898  00116C  EFDA  F008         	goto	l1502
  1899  001170                     l1494:
  1900  001170  5006               	movf	LCD_gotoxy@x^0,w,c
  1901  001172  0F53               	addlw	83
  1902  001174  6E05               	movwf	LCD_gotoxy@DDRAMAddr^0,c
  1903  001176  EFDA  F008         	goto	l1502
  1904  00117A                     l1500:
  1905  00117A  5002               	movf	LCD_gotoxy@y^0,w,c
  1906  00117C  6E03               	movwf	??_LCD_gotoxy^0,c
  1907  00117E  6A04               	clrf	(??_LCD_gotoxy+1)^0,c
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ;	Chosen strategy is simple_byte
  1916  001180  5004               	movf	(??_LCD_gotoxy+1)^0,w,c
  1917  001182  0A00               	xorlw	0	; case 0
  1918  001184  B4D8               	btfsc	status,2,c
  1919  001186  EFC7  F008         	goto	l1704
  1920  00118A  EFAA  F008         	goto	l1488
  1921  00118E                     l1704:
  1922                           
  1923                           ; Switch size 1, requested type "simple"
  1924                           ; Number of cases is 4, Range of values is 1 to 4
  1925                           ; switch strategies available:
  1926                           ; Name         Instructions Cycles
  1927                           ; simple_byte           13     7 (average)
  1928                           ;	Chosen strategy is simple_byte
  1929  00118E  5003               	movf	??_LCD_gotoxy^0,w,c
  1930  001190  0A01               	xorlw	1	; case 1
  1931  001192  B4D8               	btfsc	status,2,c
  1932  001194  EFAA  F008         	goto	l1488
  1933  001198  0A03               	xorlw	3	; case 2
  1934  00119A  B4D8               	btfsc	status,2,c
  1935  00119C  EFAE  F008         	goto	l1490
  1936  0011A0  0A01               	xorlw	1	; case 3
  1937  0011A2  B4D8               	btfsc	status,2,c
  1938  0011A4  EFB3  F008         	goto	l1492
  1939  0011A8  0A07               	xorlw	7	; case 4
  1940  0011AA  B4D8               	btfsc	status,2,c
  1941  0011AC  EFB8  F008         	goto	l1494
  1942  0011B0  EFAA  F008         	goto	l1488
  1943  0011B4                     l1502:
  1944                           
  1945                           ;lcd.c: 182:  LCD_command(1<<7|DDRAMAddr);
  1946  0011B4  5005               	movf	LCD_gotoxy@DDRAMAddr^0,w,c
  1947  0011B6  0980               	iorlw	128
  1948  0011B8  EC18  F007         	call	_LCD_command
  1949  0011BC  0012               	return		;funcret
  1950  0011BE                     __end_of_LCD_gotoxy:
  1951                           	opt callstack 0
  1952                           
  1953 ;; *************** function _USART_Init *****************
  1954 ;; Defined at:
  1955 ;;		line 26 in file "USART_libreria.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  BAUD            4   14[COMRAM] long 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1969 ;;      Params:         4       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        8 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    1
  1976 ;; This function calls:
  1977 ;;		___aldiv
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text9
  1984  0011BE                     __ptext9:
  1985                           	opt callstack 0
  1986  0011BE                     _USART_Init:
  1987                           	opt callstack 29
  1988  0011BE                     
  1989                           ;USART_libreria.c: 28:     TRISCbits.RC6 = 0;
  1990  0011BE  9C94               	bcf	148,6,c	;volatile
  1991                           
  1992                           ;USART_libreria.c: 29:     TRISCbits.RC7 = 1;
  1993  0011C0  8E94               	bsf	148,7,c	;volatile
  1994  0011C2                     
  1995                           ;USART_libreria.c: 32:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
  1996  0011C2  C00F  F005         	movff	USART_Init@BAUD,___aldiv@divisor
  1997  0011C6  C010  F006         	movff	USART_Init@BAUD+1,___aldiv@divisor+1
  1998  0011CA  C011  F007         	movff	USART_Init@BAUD+2,___aldiv@divisor+2
  1999  0011CE  C012  F008         	movff	USART_Init@BAUD+3,___aldiv@divisor+3
  2000  0011D2  0E00               	movlw	0
  2001  0011D4  6E01               	movwf	___aldiv@dividend^0,c
  2002  0011D6  0E2D               	movlw	45
  2003  0011D8  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2004  0011DA  0E31               	movlw	49
  2005  0011DC  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2006  0011DE  0E01               	movlw	1
  2007  0011E0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2008  0011E2  EC10  F006         	call	___aldiv	;wreg free
  2009  0011E6  C001  F013         	movff	?___aldiv,_USART_Init$1205
  2010  0011EA  C002  F014         	movff	?___aldiv+1,_USART_Init$1205+1
  2011  0011EE  C003  F015         	movff	?___aldiv+2,_USART_Init$1205+2
  2012  0011F2  C004  F016         	movff	?___aldiv+3,_USART_Init$1205+3
  2013                           
  2014                           ;USART_libreria.c: 32:     SPBRG = (unsigned char)(((20000000L/BAUD)/64)-1);
  2015  0011F6  C013  F001         	movff	_USART_Init$1205,___aldiv@dividend
  2016  0011FA  C014  F002         	movff	_USART_Init$1205+1,___aldiv@dividend+1
  2017  0011FE  C015  F003         	movff	_USART_Init$1205+2,___aldiv@dividend+2
  2018  001202  C016  F004         	movff	_USART_Init$1205+3,___aldiv@dividend+3
  2019  001206  0E40               	movlw	64
  2020  001208  6E05               	movwf	___aldiv@divisor^0,c
  2021  00120A  0E00               	movlw	0
  2022  00120C  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2023  00120E  0E00               	movlw	0
  2024  001210  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2025  001212  0E00               	movlw	0
  2026  001214  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2027  001216  EC10  F006         	call	___aldiv	;wreg free
  2028  00121A  0401               	decf	?___aldiv^0,w,c
  2029  00121C  6EAF               	movwf	175,c	;volatile
  2030  00121E                     
  2031                           ;USART_libreria.c: 35:     TXSTAbits.BRGH = 0;
  2032  00121E  94AC               	bcf	172,2,c	;volatile
  2033  001220                     
  2034                           ;USART_libreria.c: 36:     TXSTAbits.SYNC = 0;
  2035  001220  98AC               	bcf	172,4,c	;volatile
  2036  001222                     
  2037                           ;USART_libreria.c: 37:     RCSTAbits.SPEN = 1;
  2038  001222  8EAB               	bsf	171,7,c	;volatile
  2039  001224                     
  2040                           ;USART_libreria.c: 40:     TXSTAbits.TX9 = 0;
  2041  001224  9CAC               	bcf	172,6,c	;volatile
  2042  001226                     
  2043                           ;USART_libreria.c: 41:     TXSTAbits.TXEN = 1;
  2044  001226  8AAC               	bsf	172,5,c	;volatile
  2045  001228                     
  2046                           ;USART_libreria.c: 44:     RCSTAbits.RC9 = 0;
  2047  001228  9CAB               	bcf	171,6,c	;volatile
  2048  00122A                     
  2049                           ;USART_libreria.c: 45:     RCSTAbits.CREN = 1;
  2050  00122A  88AB               	bsf	171,4,c	;volatile
  2051  00122C  0012               	return		;funcret
  2052  00122E                     __end_of_USART_Init:
  2053                           	opt callstack 0
  2054                           
  2055 ;; *************** function ___aldiv *****************
  2056 ;; Defined at:
  2057 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  dividend        4    0[COMRAM] long 
  2060 ;;  divisor         4    4[COMRAM] long 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  quotient        4   10[COMRAM] long 
  2063 ;;  sign            1    9[COMRAM] unsigned char 
  2064 ;;  counter         1    8[COMRAM] unsigned char 
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  4    0[COMRAM] long 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2074 ;;      Params:         8       0       0       0       0       0       0       0       0
  2075 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2077 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2078 ;;Total ram usage:       14 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_USART_Init
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text10
  2088  000C20                     __ptext10:
  2089                           	opt callstack 0
  2090  000C20                     ___aldiv:
  2091                           	opt callstack 29
  2092  000C20  0E00               	movlw	0
  2093  000C22  6E0A               	movwf	___aldiv@sign^0,c
  2094  000C24  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2095  000C26  EF19  F006         	goto	u660
  2096  000C2A  EF17  F006         	goto	u661
  2097  000C2E                     u661:
  2098  000C2E  EF23  F006         	goto	l1516
  2099  000C32                     u660:
  2100  000C32  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2101  000C34  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2102  000C36  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2103  000C38  6C05               	negf	___aldiv@divisor^0,c
  2104  000C3A  0E00               	movlw	0
  2105  000C3C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2106  000C3E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2107  000C40  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2108  000C42  0E01               	movlw	1
  2109  000C44  6E0A               	movwf	___aldiv@sign^0,c
  2110  000C46                     l1516:
  2111  000C46  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2112  000C48  EF2A  F006         	goto	u670
  2113  000C4C  EF28  F006         	goto	u671
  2114  000C50                     u671:
  2115  000C50  EF34  F006         	goto	l1522
  2116  000C54                     u670:
  2117  000C54  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2118  000C56  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2119  000C58  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2120  000C5A  6C01               	negf	___aldiv@dividend^0,c
  2121  000C5C  0E00               	movlw	0
  2122  000C5E  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2123  000C60  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2124  000C62  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2125  000C64  0E01               	movlw	1
  2126  000C66  1A0A               	xorwf	___aldiv@sign^0,f,c
  2127  000C68                     l1522:
  2128  000C68  0E00               	movlw	0
  2129  000C6A  6E0B               	movwf	___aldiv@quotient^0,c
  2130  000C6C  0E00               	movlw	0
  2131  000C6E  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2132  000C70  0E00               	movlw	0
  2133  000C72  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2134  000C74  0E00               	movlw	0
  2135  000C76  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2136  000C78  5005               	movf	___aldiv@divisor^0,w,c
  2137  000C7A  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2138  000C7C  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2139  000C7E  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2140  000C80  B4D8               	btfsc	status,2,c
  2141  000C82  EF45  F006         	goto	u681
  2142  000C86  EF47  F006         	goto	u680
  2143  000C8A                     u681:
  2144  000C8A  EF7D  F006         	goto	l1544
  2145  000C8E                     u680:
  2146  000C8E  0E01               	movlw	1
  2147  000C90  6E09               	movwf	___aldiv@counter^0,c
  2148  000C92  EF51  F006         	goto	l1530
  2149  000C96                     l1528:
  2150  000C96  90D8               	bcf	status,0,c
  2151  000C98  3605               	rlcf	___aldiv@divisor^0,f,c
  2152  000C9A  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2153  000C9C  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2154  000C9E  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2155  000CA0  2A09               	incf	___aldiv@counter^0,f,c
  2156  000CA2                     l1530:
  2157  000CA2  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2158  000CA4  EF56  F006         	goto	u691
  2159  000CA8  EF58  F006         	goto	u690
  2160  000CAC                     u691:
  2161  000CAC  EF4B  F006         	goto	l1528
  2162  000CB0                     u690:
  2163  000CB0                     l1532:
  2164  000CB0  90D8               	bcf	status,0,c
  2165  000CB2  360B               	rlcf	___aldiv@quotient^0,f,c
  2166  000CB4  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2167  000CB6  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2168  000CB8  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2169  000CBA  5005               	movf	___aldiv@divisor^0,w,c
  2170  000CBC  5C01               	subwf	___aldiv@dividend^0,w,c
  2171  000CBE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2172  000CC0  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2173  000CC2  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2174  000CC4  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2175  000CC6  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2176  000CC8  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2177  000CCA  A0D8               	btfss	status,0,c
  2178  000CCC  EF6A  F006         	goto	u701
  2179  000CD0  EF6C  F006         	goto	u700
  2180  000CD4                     u701:
  2181  000CD4  EF75  F006         	goto	l1540
  2182  000CD8                     u700:
  2183  000CD8  5005               	movf	___aldiv@divisor^0,w,c
  2184  000CDA  5E01               	subwf	___aldiv@dividend^0,f,c
  2185  000CDC  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2186  000CDE  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2187  000CE0  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2188  000CE2  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2189  000CE4  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2190  000CE6  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2191  000CE8  800B               	bsf	___aldiv@quotient^0,0,c
  2192  000CEA                     l1540:
  2193  000CEA  90D8               	bcf	status,0,c
  2194  000CEC  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2195  000CEE  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2196  000CF0  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2197  000CF2  3205               	rrcf	___aldiv@divisor^0,f,c
  2198  000CF4  2E09               	decfsz	___aldiv@counter^0,f,c
  2199  000CF6  EF58  F006         	goto	l1532
  2200  000CFA                     l1544:
  2201  000CFA  500A               	movf	___aldiv@sign^0,w,c
  2202  000CFC  B4D8               	btfsc	status,2,c
  2203  000CFE  EF83  F006         	goto	u711
  2204  000D02  EF85  F006         	goto	u710
  2205  000D06                     u711:
  2206  000D06  EF8D  F006         	goto	l1548
  2207  000D0A                     u710:
  2208  000D0A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2209  000D0C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2210  000D0E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2211  000D10  6C0B               	negf	___aldiv@quotient^0,c
  2212  000D12  0E00               	movlw	0
  2213  000D14  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2214  000D16  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2215  000D18  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2216  000D1A                     l1548:
  2217  000D1A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2218  000D1E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2219  000D22  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2220  000D26  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2221  000D2A  0012               	return		;funcret
  2222  000D2C                     __end_of___aldiv:
  2223                           	opt callstack 0
  2224                           
  2225 ;; *************** function _LCD_init *****************
  2226 ;; Defined at:
  2227 ;;		line 124 in file "lcd.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        1 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    2
  2248 ;; This function calls:
  2249 ;;		_LCD_clear
  2250 ;;		_LCD_command
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text11
  2257  0010B2                     __ptext11:
  2258                           	opt callstack 0
  2259  0010B2                     _LCD_init:
  2260                           	opt callstack 28
  2261  0010B2                     
  2262                           ;lcd.c: 127:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2263  0010B2  0E14               	movlw	20
  2264  0010B4  6E02               	movwf	??_LCD_init^0,c
  2265  0010B6  0E7A               	movlw	122
  2266  0010B8                     u857:
  2267  0010B8  2EE8               	decfsz	wreg,f,c
  2268  0010BA  D7FE               	bra	u857
  2269  0010BC  2E02               	decfsz	??_LCD_init^0,f,c
  2270  0010BE  D7FC               	bra	u857
  2271  0010C0                     
  2272                           ;lcd.c: 128:     TRISDbits.TRISD0 = 0;
  2273  0010C0  9095               	bcf	149,0,c	;volatile
  2274  0010C2                     
  2275                           ;lcd.c: 129:     TRISDbits.TRISD1 = 0;
  2276  0010C2  9295               	bcf	149,1,c	;volatile
  2277  0010C4                     
  2278                           ;lcd.c: 130:     TRISDbits.TRISD2 = 0;
  2279  0010C4  9495               	bcf	149,2,c	;volatile
  2280  0010C6                     
  2281                           ;lcd.c: 131:     TRISDbits.TRISD4 = 0;
  2282  0010C6  9895               	bcf	149,4,c	;volatile
  2283  0010C8                     
  2284                           ;lcd.c: 132:     TRISDbits.TRISD5 = 0;
  2285  0010C8  9A95               	bcf	149,5,c	;volatile
  2286  0010CA                     
  2287                           ;lcd.c: 133:     TRISDbits.TRISD6 = 0;
  2288  0010CA  9C95               	bcf	149,6,c	;volatile
  2289  0010CC                     
  2290                           ;lcd.c: 134:     TRISDbits.TRISD7 = 0;
  2291  0010CC  9E95               	bcf	149,7,c	;volatile
  2292  0010CE                     
  2293                           ;lcd.c: 136:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 0; LATDbits.LA
      +                          TD4 = 0;
  2294  0010CE  9E8C               	bcf	140,7,c	;volatile
  2295  0010D0  9C8C               	bcf	140,6,c	;volatile
  2296  0010D2  9A8C               	bcf	140,5,c	;volatile
  2297  0010D4  988C               	bcf	140,4,c	;volatile
  2298  0010D6                     
  2299                           ;lcd.c: 137:     LATDbits.LATD2 = 0; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2300  0010D6  948C               	bcf	140,2,c	;volatile
  2301  0010D8  928C               	bcf	140,1,c	;volatile
  2302  0010DA  908C               	bcf	140,0,c	;volatile
  2303  0010DC                     
  2304                           ;lcd.c: 139:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  2305  0010DC  9E8C               	bcf	140,7,c	;volatile
  2306  0010DE  9C8C               	bcf	140,6,c	;volatile
  2307  0010E0  8A8C               	bsf	140,5,c	;volatile
  2308  0010E2  888C               	bsf	140,4,c	;volatile
  2309  0010E4                     
  2310                           ;lcd.c: 140:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2311  0010E4  848C               	bsf	140,2,c	;volatile
  2312  0010E6  928C               	bcf	140,1,c	;volatile
  2313  0010E8  908C               	bcf	140,0,c	;volatile
  2314                           
  2315                           ;lcd.c: 141:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2316  0010EA  0EC8               	movlw	200
  2317  0010EC                     u867:
  2318  0010EC  D000               	nop2	
  2319  0010EE  2EE8               	decfsz	wreg,f,c
  2320  0010F0  D7FD               	bra	u867
  2321  0010F2                     
  2322                           ;lcd.c: 142:     LATDbits.LATD2 = 0;
  2323  0010F2  948C               	bcf	140,2,c	;volatile
  2324                           
  2325                           ;lcd.c: 143:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2326  0010F4  0EC8               	movlw	200
  2327  0010F6                     u877:
  2328  0010F6  D000               	nop2	
  2329  0010F8  2EE8               	decfsz	wreg,f,c
  2330  0010FA  D7FD               	bra	u877
  2331  0010FC                     
  2332                           ;lcd.c: 145:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 1;
  2333  0010FC  9E8C               	bcf	140,7,c	;volatile
  2334  0010FE  9C8C               	bcf	140,6,c	;volatile
  2335  001100  8A8C               	bsf	140,5,c	;volatile
  2336  001102  888C               	bsf	140,4,c	;volatile
  2337  001104                     
  2338                           ;lcd.c: 146:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2339  001104  848C               	bsf	140,2,c	;volatile
  2340  001106  928C               	bcf	140,1,c	;volatile
  2341  001108  908C               	bcf	140,0,c	;volatile
  2342                           
  2343                           ;lcd.c: 147:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2344  00110A  0EC8               	movlw	200
  2345  00110C                     u887:
  2346  00110C  D000               	nop2	
  2347  00110E  2EE8               	decfsz	wreg,f,c
  2348  001110  D7FD               	bra	u887
  2349  001112                     
  2350                           ;lcd.c: 148:     LATDbits.LATD2 = 0;
  2351  001112  948C               	bcf	140,2,c	;volatile
  2352                           
  2353                           ;lcd.c: 149:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2354  001114  0EC8               	movlw	200
  2355  001116                     u897:
  2356  001116  D000               	nop2	
  2357  001118  2EE8               	decfsz	wreg,f,c
  2358  00111A  D7FD               	bra	u897
  2359  00111C                     
  2360                           ;lcd.c: 151:     LATDbits.LATD7 = 0; LATDbits.LATD6 = 0; LATDbits.LATD5 = 1; LATDbits.LA
      +                          TD4 = 0;
  2361  00111C  9E8C               	bcf	140,7,c	;volatile
  2362  00111E  9C8C               	bcf	140,6,c	;volatile
  2363  001120  8A8C               	bsf	140,5,c	;volatile
  2364  001122  988C               	bcf	140,4,c	;volatile
  2365  001124                     
  2366                           ;lcd.c: 152:     LATDbits.LATD2 = 1; LATDbits.LATD1 = 0; LATDbits.LATD0 = 0;
  2367  001124  848C               	bsf	140,2,c	;volatile
  2368  001126  928C               	bcf	140,1,c	;volatile
  2369  001128  908C               	bcf	140,0,c	;volatile
  2370                           
  2371                           ;lcd.c: 153:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2372  00112A  0EC8               	movlw	200
  2373  00112C                     u907:
  2374  00112C  D000               	nop2	
  2375  00112E  2EE8               	decfsz	wreg,f,c
  2376  001130  D7FD               	bra	u907
  2377  001132                     
  2378                           ;lcd.c: 154:     LATDbits.LATD2 = 0;
  2379  001132  948C               	bcf	140,2,c	;volatile
  2380                           
  2381                           ;lcd.c: 155:  _delay((unsigned long)((1)*(4000000/4000.0)));
  2382  001134  0EC8               	movlw	200
  2383  001136                     u917:
  2384  001136  D000               	nop2	
  2385  001138  2EE8               	decfsz	wreg,f,c
  2386  00113A  D7FD               	bra	u917
  2387  00113C                     
  2388                           ;lcd.c: 157:  LCD_command(0b00101000);
  2389  00113C  0E28               	movlw	40
  2390  00113E  EC18  F007         	call	_LCD_command
  2391  001142                     
  2392                           ;lcd.c: 159:  LCD_command(0b00001100);
  2393  001142  0E0C               	movlw	12
  2394  001144  EC18  F007         	call	_LCD_command
  2395  001148                     
  2396                           ;lcd.c: 161:     LCD_clear();
  2397  001148  EC64  F009         	call	_LCD_clear	;wreg free
  2398  00114C  0012               	return		;funcret
  2399  00114E                     __end_of_LCD_init:
  2400                           	opt callstack 0
  2401                           
  2402 ;; *************** function _LCD_clear *****************
  2403 ;; Defined at:
  2404 ;;		line 197 in file "lcd.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;		None
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, status,2, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    1
  2425 ;; This function calls:
  2426 ;;		_LCD_command
  2427 ;; This function is called by:
  2428 ;;		_LCD_init
  2429 ;;		_read_time
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text12
  2435  0012C8                     __ptext12:
  2436                           	opt callstack 0
  2437  0012C8                     _LCD_clear:
  2438                           	opt callstack 28
  2439  0012C8                     
  2440                           ;lcd.c: 198:     LCD_command(0b00000001);
  2441  0012C8  0E01               	movlw	1
  2442  0012CA  EC18  F007         	call	_LCD_command
  2443  0012CE  0012               	return		;funcret
  2444  0012D0                     __end_of_LCD_clear:
  2445                           	opt callstack 0
  2446                           
  2447 ;; *************** function _LCD_command *****************
  2448 ;; Defined at:
  2449 ;;		line 67 in file "lcd.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  cmd             1    wreg     unsigned char 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  cmd             1    0[COMRAM] unsigned char 
  2454 ;; Return value:  Size  Location     Type
  2455 ;;                  1    wreg      void 
  2456 ;; Registers used:
  2457 ;;		wreg, status,2, cstack
  2458 ;; Tracked objects:
  2459 ;;		On entry : 0/0
  2460 ;;		On exit  : 0/0
  2461 ;;		Unchanged: 0/0
  2462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2463 ;;      Params:         0       0       0       0       0       0       0       0       0
  2464 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2465 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2466 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2467 ;;Total ram usage:        1 bytes
  2468 ;; Hardware stack levels used:    1
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_LCD_init
  2473 ;;		_LCD_gotoxy
  2474 ;;		_LCD_clear
  2475 ;;		_LCD_definechar
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text13
  2480  000E30                     __ptext13:
  2481                           	opt callstack 0
  2482  000E30                     _LCD_command:
  2483                           	opt callstack 28
  2484                           
  2485                           ;incstack = 0
  2486                           ;LCD_command@cmd stored from wreg
  2487  000E30  6E01               	movwf	LCD_command@cmd^0,c
  2488  000E32                     
  2489                           ;lcd.c: 69:     LATDbits.LATD0 = 0;
  2490  000E32  908C               	bcf	140,0,c	;volatile
  2491  000E34                     
  2492                           ;lcd.c: 71:     if ( cmd & 0x10 ) {
  2493  000E34  A801               	btfss	LCD_command@cmd^0,4,c
  2494  000E36  EF1F  F007         	goto	u91
  2495  000E3A  EF21  F007         	goto	u90
  2496  000E3E                     u91:
  2497  000E3E  EF24  F007         	goto	l30
  2498  000E42                     u90:
  2499  000E42                     
  2500                           ;lcd.c: 72:         LATDbits.LATD4 = 1;
  2501  000E42  888C               	bsf	140,4,c	;volatile
  2502                           
  2503                           ;lcd.c: 73:  } else {
  2504  000E44  EF25  F007         	goto	l994
  2505  000E48                     l30:
  2506                           
  2507                           ;lcd.c: 74:         LATDbits.LATD4 = 0;
  2508  000E48  988C               	bcf	140,4,c	;volatile
  2509  000E4A                     l994:
  2510                           
  2511                           ;lcd.c: 76:  if ( cmd & 0x20 ) {
  2512  000E4A  AA01               	btfss	LCD_command@cmd^0,5,c
  2513  000E4C  EF2A  F007         	goto	u101
  2514  000E50  EF2C  F007         	goto	u100
  2515  000E54                     u101:
  2516  000E54  EF2F  F007         	goto	l32
  2517  000E58                     u100:
  2518  000E58                     
  2519                           ;lcd.c: 77:         LATDbits.LATD5 = 1;
  2520  000E58  8A8C               	bsf	140,5,c	;volatile
  2521                           
  2522                           ;lcd.c: 78:  } else {
  2523  000E5A  EF30  F007         	goto	l998
  2524  000E5E                     l32:
  2525                           
  2526                           ;lcd.c: 79:         LATDbits.LATD5 = 0;
  2527  000E5E  9A8C               	bcf	140,5,c	;volatile
  2528  000E60                     l998:
  2529                           
  2530                           ;lcd.c: 81:  if ( cmd & 0x40 ) {
  2531  000E60  AC01               	btfss	LCD_command@cmd^0,6,c
  2532  000E62  EF35  F007         	goto	u111
  2533  000E66  EF37  F007         	goto	u110
  2534  000E6A                     u111:
  2535  000E6A  EF3A  F007         	goto	l34
  2536  000E6E                     u110:
  2537  000E6E                     
  2538                           ;lcd.c: 82:         LATDbits.LATD6 = 1;
  2539  000E6E  8C8C               	bsf	140,6,c	;volatile
  2540                           
  2541                           ;lcd.c: 83:  } else {
  2542  000E70  EF3B  F007         	goto	l1002
  2543  000E74                     l34:
  2544                           
  2545                           ;lcd.c: 84:         LATDbits.LATD6 = 0;
  2546  000E74  9C8C               	bcf	140,6,c	;volatile
  2547  000E76                     l1002:
  2548                           
  2549                           ;lcd.c: 86:  if ( cmd & 0x80 ) {
  2550  000E76  AE01               	btfss	LCD_command@cmd^0,7,c
  2551  000E78  EF40  F007         	goto	u121
  2552  000E7C  EF42  F007         	goto	u120
  2553  000E80                     u121:
  2554  000E80  EF45  F007         	goto	l36
  2555  000E84                     u120:
  2556  000E84                     
  2557                           ;lcd.c: 87:         LATDbits.LATD7 = 1;
  2558  000E84  8E8C               	bsf	140,7,c	;volatile
  2559                           
  2560                           ;lcd.c: 88:  } else {
  2561  000E86  EF46  F007         	goto	l37
  2562  000E8A                     l36:
  2563                           
  2564                           ;lcd.c: 89:         LATDbits.LATD7 = 0;
  2565  000E8A  9E8C               	bcf	140,7,c	;volatile
  2566  000E8C                     l37:
  2567                           
  2568                           ;lcd.c: 92:     LATDbits.LATD2 = 1;
  2569  000E8C  848C               	bsf	140,2,c	;volatile
  2570  000E8E                     
  2571                           ;lcd.c: 93:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2572  000E8E  0EC8               	movlw	200
  2573  000E90                     u927:
  2574  000E90  D000               	nop2	
  2575  000E92  2EE8               	decfsz	wreg,f,c
  2576  000E94  D7FD               	bra	u927
  2577  000E96                     
  2578                           ;lcd.c: 94:  LATDbits.LATD2 = 0;
  2579  000E96  948C               	bcf	140,2,c	;volatile
  2580                           
  2581                           ;lcd.c: 95:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2582  000E98  0EC8               	movlw	200
  2583  000E9A                     u937:
  2584  000E9A  D000               	nop2	
  2585  000E9C  2EE8               	decfsz	wreg,f,c
  2586  000E9E  D7FD               	bra	u937
  2587  000EA0                     
  2588                           ;lcd.c: 97:     if ( cmd & 0x01 ) {
  2589  000EA0  A001               	btfss	LCD_command@cmd^0,0,c
  2590  000EA2  EF55  F007         	goto	u131
  2591  000EA6  EF57  F007         	goto	u130
  2592  000EAA                     u131:
  2593  000EAA  EF5A  F007         	goto	l38
  2594  000EAE                     u130:
  2595  000EAE                     
  2596                           ;lcd.c: 98:         LATDbits.LATD4 = 1;
  2597  000EAE  888C               	bsf	140,4,c	;volatile
  2598                           
  2599                           ;lcd.c: 99:  } else {
  2600  000EB0  EF5B  F007         	goto	l1014
  2601  000EB4                     l38:
  2602                           
  2603                           ;lcd.c: 100:         LATDbits.LATD4 = 0;
  2604  000EB4  988C               	bcf	140,4,c	;volatile
  2605  000EB6                     l1014:
  2606                           
  2607                           ;lcd.c: 102:  if ( cmd & 0x02 ) {
  2608  000EB6  A201               	btfss	LCD_command@cmd^0,1,c
  2609  000EB8  EF60  F007         	goto	u141
  2610  000EBC  EF62  F007         	goto	u140
  2611  000EC0                     u141:
  2612  000EC0  EF65  F007         	goto	l40
  2613  000EC4                     u140:
  2614  000EC4                     
  2615                           ;lcd.c: 103:         LATDbits.LATD5 = 1;
  2616  000EC4  8A8C               	bsf	140,5,c	;volatile
  2617                           
  2618                           ;lcd.c: 104:  } else {
  2619  000EC6  EF66  F007         	goto	l1018
  2620  000ECA                     l40:
  2621                           
  2622                           ;lcd.c: 105:         LATDbits.LATD5 = 0;
  2623  000ECA  9A8C               	bcf	140,5,c	;volatile
  2624  000ECC                     l1018:
  2625                           
  2626                           ;lcd.c: 107:  if ( cmd & 0x04 ) {
  2627  000ECC  A401               	btfss	LCD_command@cmd^0,2,c
  2628  000ECE  EF6B  F007         	goto	u151
  2629  000ED2  EF6D  F007         	goto	u150
  2630  000ED6                     u151:
  2631  000ED6  EF70  F007         	goto	l42
  2632  000EDA                     u150:
  2633  000EDA                     
  2634                           ;lcd.c: 108:         LATDbits.LATD6 = 1;
  2635  000EDA  8C8C               	bsf	140,6,c	;volatile
  2636                           
  2637                           ;lcd.c: 109:  } else {
  2638  000EDC  EF71  F007         	goto	l1022
  2639  000EE0                     l42:
  2640                           
  2641                           ;lcd.c: 110:         LATDbits.LATD6 = 0;
  2642  000EE0  9C8C               	bcf	140,6,c	;volatile
  2643  000EE2                     l1022:
  2644                           
  2645                           ;lcd.c: 112:  if ( cmd & 0x08 ) {
  2646  000EE2  A601               	btfss	LCD_command@cmd^0,3,c
  2647  000EE4  EF76  F007         	goto	u161
  2648  000EE8  EF78  F007         	goto	u160
  2649  000EEC                     u161:
  2650  000EEC  EF7B  F007         	goto	l44
  2651  000EF0                     u160:
  2652  000EF0                     
  2653                           ;lcd.c: 113:         LATDbits.LATD7 = 1;
  2654  000EF0  8E8C               	bsf	140,7,c	;volatile
  2655                           
  2656                           ;lcd.c: 114:  } else {
  2657  000EF2  EF7C  F007         	goto	l45
  2658  000EF6                     l44:
  2659                           
  2660                           ;lcd.c: 115:         LATDbits.LATD7 = 0;
  2661  000EF6  9E8C               	bcf	140,7,c	;volatile
  2662  000EF8                     l45:
  2663                           
  2664                           ;lcd.c: 118:     LATDbits.LATD2 = 1;
  2665  000EF8  848C               	bsf	140,2,c	;volatile
  2666  000EFA                     
  2667                           ;lcd.c: 119:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2668  000EFA  0EC8               	movlw	200
  2669  000EFC                     u947:
  2670  000EFC  D000               	nop2	
  2671  000EFE  2EE8               	decfsz	wreg,f,c
  2672  000F00  D7FD               	bra	u947
  2673  000F02                     
  2674                           ;lcd.c: 120:     LATDbits.LATD2 = 0;
  2675  000F02  948C               	bcf	140,2,c	;volatile
  2676                           
  2677                           ;lcd.c: 121:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2678  000F04  0EC8               	movlw	200
  2679  000F06                     u957:
  2680  000F06  D000               	nop2	
  2681  000F08  2EE8               	decfsz	wreg,f,c
  2682  000F0A  D7FD               	bra	u957
  2683  000F0C  0012               	return		;funcret
  2684  000F0E                     __end_of_LCD_command:
  2685                           	opt callstack 0
  2686                           
  2687                           	psect	rparam
  2688  0000                     tosu	equ	0xFFF
  2689                           tosh	equ	0xFFE
  2690                           tosl	equ	0xFFD
  2691                           stkptr	equ	0xFFC
  2692                           pclatu	equ	0xFFB
  2693                           pclath	equ	0xFFA
  2694                           pcl	equ	0xFF9
  2695                           tblptru	equ	0xFF8
  2696                           tblptrh	equ	0xFF7
  2697                           tblptrl	equ	0xFF6
  2698                           tablat	equ	0xFF5
  2699                           prodh	equ	0xFF4
  2700                           prodl	equ	0xFF3
  2701                           indf0	equ	0xFEF
  2702                           postinc0	equ	0xFEE
  2703                           postdec0	equ	0xFED
  2704                           preinc0	equ	0xFEC
  2705                           plusw0	equ	0xFEB
  2706                           fsr0h	equ	0xFEA
  2707                           fsr0l	equ	0xFE9
  2708                           wreg	equ	0xFE8
  2709                           indf1	equ	0xFE7
  2710                           postinc1	equ	0xFE6
  2711                           postdec1	equ	0xFE5
  2712                           preinc1	equ	0xFE4
  2713                           plusw1	equ	0xFE3
  2714                           fsr1h	equ	0xFE2
  2715                           fsr1l	equ	0xFE1
  2716                           bsr	equ	0xFE0
  2717                           indf2	equ	0xFDF
  2718                           postinc2	equ	0xFDE
  2719                           postdec2	equ	0xFDD
  2720                           preinc2	equ	0xFDC
  2721                           plusw2	equ	0xFDB
  2722                           fsr2h	equ	0xFDA
  2723                           fsr2l	equ	0xFD9
  2724                           status	equ	0xFD8


Data Sizes:
    Strings     46
    Constant    0
    Data        17
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      71
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_puts@data	PTR unsigned char  size(2) Largest target is 15
		 -> STR_5(CODE[9]), STR_4(CODE[5]), STR_3(CODE[15]), STR_2(CODE[11]), 
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_read_time
    _TECLADO->_teclado_getc
    _LCD_puts->_LCD_putc
    _LCD_gotoxy->_LCD_command
    _USART_Init->___aldiv
    _LCD_init->_LCD_command
    _LCD_clear->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6410
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_init
                           _LCD_puts
                            _TECLADO
                         _USART_Init
                          _read_time
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_time                                           14    14      0    2894
                                             19 COMRAM    14    14      0
                          _LCD_clear
                         _LCD_gotoxy
                           _LCD_putc
                           _LCD_puts
                            _TECLADO
                           _USART_Tx
 ---------------------------------------------------------------------------------
 (2) _USART_Tx                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TECLADO                                              0     0      0     345
                       _teclado_getc
 ---------------------------------------------------------------------------------
 (3) _teclado_getc                                        19    19      0     345
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 (2) _LCD_puts                                             6     3      3     971
                                              1 COMRAM     6     3      3
                           _LCD_putc
 ---------------------------------------------------------------------------------
 (3) _LCD_putc                                             1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_gotoxy                                           5     4      1    1115
                                              1 COMRAM     5     4      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           8     4      4     725
                                             14 COMRAM     8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0     240
                                              1 COMRAM     1     1      0
                          _LCD_clear
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0     120
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          1     1      0     120
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_clear
     _LCD_command
   _LCD_gotoxy
     _LCD_command
   _LCD_init
     _LCD_clear
       _LCD_command
     _LCD_command
   _LCD_puts
     _LCD_putc
   _TECLADO
     _teclado_getc
   _USART_Init
     ___aldiv
   _read_time
     _LCD_clear
       _LCD_command
     _LCD_gotoxy
       _LCD_command
     _LCD_putc
     _LCD_puts
       _LCD_putc
     _TECLADO
       _teclado_getc
     _USART_Tx
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      47       1       74.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      47      20        0.0%
DATA                 0      0      47       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Oct 20 21:43:19 2020

                      _K 0033                        _i 0032                       l11 0F26  
                     l21 0FA4                       l13 0F3C                       l30 0E48  
                     l23 0FBA                       l15 0F52                       l40 0ECA  
                     l32 0E5E                       l25 0FD0                       l17 0F68  
                     l42 0EE0                       l34 0E74                       l26 0FD2  
                     l18 0F6A                       l27 0FE2                       l19 0F8E  
                     l44 0EF6                       l36 0E8A                       l45 0EF8  
                     l37 0E8C                       l46 0F0C                       l38 0EB4  
                     l55 126A                       l73 12CE                       l49 114C  
                     l65 11BC                       l94 0874                       l86 12BE  
                     l95 0870                       l97 088A                       l98 0886  
                     u10 0F20                       u11 0F1C                       u20 0F36  
                     u21 0F32                       u30 0F4C                       u31 0F48  
                     u40 0F62                       u41 0F5E                       u50 0F88  
                     u51 0F84                       u60 0F9E                       u61 0F9A  
                     u70 0FB4                       u71 0FB0                       u80 0FCA  
                     u81 0FC6                       u90 0E42                       u91 0E3E  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l100 08A0                      l101 089C                      l110 0900  
                    l111 08FC                      l103 08B6                      l120 0962  
                    l104 08B2                      l121 095E                      l113 0916  
                    l130 09A0                      l114 0912                      l123 0978  
                    l107 08EA                      l140 0A02                      l124 0974  
                    l116 092C                      l108 08E6                      l133 09DA  
                    l117 0928                      l142 0A1C                      l134 09D6  
                    l126 098E                      l214 0E2E                      l230 0C1E  
                    l143 0A18                      l127 098A                      l136 09F0  
                    l145 0A4C                      l137 09EC                      l129 09A4  
                    l217 0C0E                      l139 0A06                      l261 12C6  
                    l352 0D2A                      l258 122C                      _DEC 0030  
                    l950 0F20                      l960 0F54                      l952 0F28  
                    l970 0F88                      l962 0F62                      l954 0F36  
                    l946 0F10                      l980 0FBC                      l972 0F90  
                    l964 0F6C                      l956 0F3E                      l948 0F12  
                    l990 0E34                      l982 0FCA                      l974 0F9E  
                    l966 0F72                      l958 0F4C                      l992 0E42  
                    l984 0FD4                      l976 0FA6                      l968 0F7A  
                    l994 0E4A                      l986 0FDA                      l978 0FB4  
                    l996 0E58                      l988 0E32                      l998 0E60  
           __CFG_CPB$OFF 000000                      u100 0E58                      u101 0E54  
                    u110 0E6E                      u111 0E6A                      u120 0E84  
                    u200 0898                      u121 0E80                      u201 0894  
                    u130 0EAE                      u210 08AE                      u131 0EAA  
                    u211 08AA                      u140 0EC4                      u300 0986  
                    u220 08C4                      u141 0EC0                      u301 0982  
                    u221 08C0                      u150 0EDA                      u310 099C  
                    u230 08D6                      u151 0ED6                      u311 0998  
                    u231 08D2                      u160 0EF0                      u320 09B2  
                    u240 08F8                      u400 0D42                      u161 0EEC  
                    u321 09AE                      u241 08F4                      u401 0D3E  
                    u330 09C6                      u250 090E                      u410 0D52  
                    u331 09C2                      u251 090A                      u171 083A  
                    u411 0D4E                      u340 09E8                      u260 0924  
                    u180 0860                      u500 0E14                      u420 0D64  
                    u341 09E4                      u261 0920                      u181 085C  
                    u501 0E10                      u421 0D60                      u350 09FE  
                    u270 093A                      u190 0882                      u510 0E2A  
                    u430 0D7A                      u351 09FA                      u271 0936  
                    u191 087E                      u511 0E26                      u431 0D76  
                    u360 0A14                      u280 094E                      u440 0D90  
                    u361 0A10                      u281 094A                      u441 0D8C  
                    u370 0A2A                      u290 0970                      u450 0DA6  
           __CFG_CPD$OFF 000000                      u371 0A26                      u291 096C  
                    u451 0DA2                      u700 0CD8                      u380 0A4A  
                    u460 0DBC                      u701 0CD4                      u381 0A46  
                    u461 0DB8                      u710 0D0A                      u470 0DD2  
                    u711 0D06                      u471 0DCE                      u480 0DE8  
                    u720 0BF2                      u481 0DE4                      u721 0BEE  
                    u650 126A                      u490 0DFE                      u730 0C0A  
                    u651 1266                      u491 0DFA                      u731 0C06  
                    u660 0C32                      u740 0C1E                      u661 0C2E  
                    u741 0C1A                      u670 0C54                      u750 101C  
                    _VAL 002E                      u671 0C50                      u807 09CC  
                    u751 1018                      u680 0C8E                      u760 106A  
                    u681 0C8A                      u817 0F6E                      u761 1066  
                    u690 0CB0                      u907 112C                      u691 0CAC  
                    u827 0F76                      u917 1136                      u837 0FD6  
                    u927 0E90                      u847 0FDE                      u937 0E9A  
                    u857 10B8                      u777 0866                      u947 0EFC  
                    u867 10EC                      u787 08DC                      u957 0F06  
                    u877 10F6                      u797 0954                      u887 110C  
                    u897 1116                      _UNI 002F              ?_LCD_gotoxy 0002  
                    _pos 0047                      wreg 000FE8             __CFG_FOSC$HS 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     l1000 0E6E  
                   l1010 0EA0                     l1002 0E76                     l1020 0EDA  
                   l1012 0EAE                     l1004 0E84                     l1022 0EE2  
                   l1014 0EB6                     l1006 0E8E                     l1030 0830  
                   l1110 0D32                     l1024 0EF0                     l1016 0EC4  
                   l1008 0E96                     l1200 10B2                     l1032 0842  
                   l1120 0D7A                     l1112 0D42                     l1026 0EFA  
                   l1018 0ECC                     l1210 10C8                     l1202 10C0  
                   l1050 08D6                     l1042 084E                     l1034 0842  
                   l1130 0DAA                     l1122 0D7E                     l1114 0D52  
                   l1106 0D2C                     l1028 0F02                     l1220 10D2  
                   l1212 10CA                     l1204 10C2                     l1060 09B2  
                   l1052 08DA                     l1044 0860                     l1036 0846  
                   l1140 0DE8                     l1132 0DBC                     l1124 0D90  
                   l1116 0D64                     l1230 10DC                     l1222 10D4  
                   l1214 10CC                     l1206 10C4                     l1070 0A4A  
                   l1062 09C6                     l1054 093A                     l1046 0864  
                   l1150 0E18                     l1142 0DEC                     l1134 0DC0  
                   l1126 0D94                     l1118 0D68                     l1240 10E6  
                   l1232 10DE                     l1224 10D6                     l1216 10CE  
                   l1208 10C6                     l1064 09CA                     l1056 094E  
                   l1048 08C4                     l1152 0E2A                     l1144 0DFE  
                   l1136 0DD2                     l1128 0DA6                     l1074 12C8  
                   l1250 1100                     l1242 10E8                     l1234 10E0  
                   l1226 10D8                     l1218 10D0                     l1066 0A2A  
                   l1058 0952                     l1146 0E02                     l1138 0DD6  
                   l1154 12C2                     l1260 1112                     l1252 1102  
                   l1244 10F2                     l1236 10E2                     l1228 10DA  
                   l1500 117A                     l1068 0A2E                     l1148 0E14  
                   l1270 1124                     l1262 111C                     l1254 1104  
                   l1246 10FC                     l1238 10E4                     l1510 0C24  
                   l1502 11B4                     l1280 1142                     l1272 1126  
                   l1264 111E                     l1256 1106                     l1248 10FE  
                   l1520 0C64                     l1512 0C32                     l1600 0B48  
                   l1282 1148                     l1274 1128                     l1266 1120  
                   l1258 1108                     l1530 0CA2                     l1522 0C68  
                   l1514 0C42                     l1610 0B62                     l1276 1132  
                   l1268 1122                     l1540 0CEA                     l1532 0CB0  
                   l1524 0C78                     l1516 0C46                     l1508 0C20  
                   l1612 0B66                     l1620 0B96                     l1284 12B4  
                   l1278 113C                     l1542 0CF4                     l1534 0CBA  
                   l1526 0C8E                     l1518 0C54                     l1630 0BF8  
                   l1702 0BAA                     l1614 0B88                     l1606 0B52  
                   l1622 0BE0                     l1286 12BC                     l1536 0CD8  
                   l1528 0C96                     l1544 0CFA                     l1640 11C2  
                   l1704 118E                     l1480 123A                     l1632 0C0A  
                   l1624 0BE2                     l1616 0B8C                     l1608 0B5C  
                   l1560 0A6A                     l1552 0A4E                     l1546 0D0A  
                   l1538 0CE8                     l1650 1226                     l1642 121E  
                   l1490 115C                     l1482 1256                     l1626 0BF2  
                   l1570 0AA4                     l1562 0A6E                     l1554 0A52  
                   l1548 0D1A                     l1652 1228                     l1644 1220  
                   l1492 1166                     l1484 1258                     l1628 0BF6  
                   l1572 0AC6                     l1564 0A90                     l1556 0A5A  
                   l1660 1004                     l1654 122A                     l1646 1222  
                   l1638 11BE                     l1494 1170                     l1486 1150  
                   l1478 122E                     l1590 0B18                     l1582 0AE2  
                   l1574 0ACE                     l1566 0A9A                     l1558 0A64  
                   l1670 102A                     l1662 1008                     l1648 1224  
                   l1488 1154                     l1592 0B20                     l1584 0AEC  
                   l1576 0AD8                     l1568 0AA0                     l1680 106A  
                   l1672 103A                     l1664 100C                     l1656 0FE4  
                   l1594 0B24                     l1586 0AF2                     l1690 10A2  
                   l1682 106E                     l1674 1044                     l1666 101C  
                   l1658 0FF0                     l1596 0B2E                     l1588 0AF6  
                   l1692 10A6                     l1684 1078                     l1668 1020  
                   l1676 1054                     l1598 0B3E                     l1686 1088  
                   l1678 1058                     l1688 1092          __end_of_TECLADO 0E30  
                   STR_1 0824                     STR_2 0810                     STR_3 0801  
                   STR_4 082A                     STR_5 081B             ?_LCD_command 0001  
                   _LATB 000F8A                     _main 0FE4                     _read 0031  
                   _item 0022                     _time 0034                     fsr1l 000FE1  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000       __size_of_LCD_clear 0008            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000         __end_of_LCD_init 114E  
         __CFG_CCP2MX$ON 000000         __end_of_LCD_putc 0FE4         __end_of_LCD_puts 126C  
        __end_of___aldiv 0D2C                    ?_main 0001                    _RCREG 000FAE  
                  _SPBRG 000FAF                    _PORTB 000F81                    _PORTC 000F82  
          __CFG_USBDIV$1 000000                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TXREG 000FAD            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
         __CFG_EBTRB$OFF 000000         __end_of_USART_Tx 12C8             USART_Tx@data 0001  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8           __CFG_ICPRT$OFF 000000              ?_USART_Init 000F  
    __size_of_LCD_gotoxy 0070          __initialization 126C             __end_of_main 10B2  
            LCD_gotoxy@x 0006              LCD_gotoxy@y 0002                   ??_main 0022  
          __activetblptr 000002                ??_TECLADO 0014        __end_of_LCD_clear 12D0  
                 _ADCON1 000FC1           __CFG_XINST$OFF 000000                ??___aldiv 0009  
         __CFG_STVREN$ON 000000                   clear_0 1292                   _numero 002C  
           __pdataCOMRAM 0037             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8      __size_of_USART_Init 0070  
             __accesstop 0060  __end_of__initialization 1298          __CFG_PBADEN$OFF 000000  
   __size_of_LCD_command 00DE                ?_LCD_init 0001                ?_LCD_putc 0001  
              ?_LCD_puts 0002            ___rparam_used 000001           __pcstackCOMRAM 0001  
         LCD_puts@nBytes 0004                ?_USART_Tx 0001                LCD_puts@i 0007  
           ??_LCD_gotoxy 0003       teclado_getc@letras 0001            ?_teclado_getc 0001  
           LCD_puts@data 0002            ?_teclado_init 0001               ??_LCD_init 0002  
             ??_LCD_putc 0001               ??_LCD_puts 0005       __size_of_read_time 01D2  
     __end_of_LCD_gotoxy 11BE               ??_USART_Tx 0001                  _TECLADO 0D2C  
         ??_teclado_getc 0001           ??_teclado_init 0001          __CFG_VREGEN$OFF 000000  
           ??_USART_Init 0013                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 0C20             __psmallconst 0800           USART_Init@BAUD 000F  
                __pcinit 126C            teclado_getc@i 0012                  __ramtop 0800  
                __ptext0 0FE4                  __ptext1 12B4                  __ptext2 0A4E  
                __ptext3 12C0                  __ptext4 0D2C                  __ptext5 0830  
                __ptext6 122E                  __ptext7 0F0E                  __ptext8 114E  
                __ptext9 11BE         ___aldiv@dividend 0001        __end_of_read_time 0C20  
     __end_of_USART_Init 122E                _LCD_clear 12C8     end_of_initialization 1298  
          __Lmediumconst 0000                _RCSTAbits 000FAB         ___aldiv@quotient 000B  
                postdec1 000FE5                  postinc0 000FEE             read_time@num 001E  
              _TRISCbits 000F94                _TRISDbits 000F95               ?_LCD_clear 0001  
              _TXSTAbits 000FAC        __size_of_LCD_init 009C        __size_of_LCD_putc 00D6  
      __size_of_LCD_puts 003E            __pidataCOMRAM 12A2     __end_of_teclado_getc 0A4E  
   __end_of_teclado_init 12C0        __size_of_USART_Tx 0008      start_initialization 126C  
          ??_LCD_command 0001               LCD_putc@ch 0001         __CFG_LPT1OSC$OFF 000000  
    LCD_gotoxy@DDRAMAddr 0005               read_time@d 0016               read_time@u 001A  
      teclado_getc@F3164 0037              __pbssCOMRAM 0022                 ?_TECLADO 0001  
            ??_LCD_clear 0002        teclado_getc@valor 0011      __end_of_LCD_command 0F0E  
               ?___aldiv 0001              __smallconst 0800                _read_time 0A4E  
        ___aldiv@divisor 0005          ___aldiv@counter 0009                 _LATDbits 000F8C  
               _LCD_init 10B2                 _LCD_putc 0F0E                 _LCD_puts 122E  
               _PIE1bits 000F9D         __CFG_WDTPS$32768 000000    __size_of_teclado_getc 021E  
  __size_of_teclado_init 000C                 _USART_Tx 12C0         __size_of_TECLADO 0104  
            _INTCON2bits 000FF1                copy_data0 1280               ?_read_time 0001  
            _LCD_command 0E30             _teclado_getc 0830             _teclado_init 12B4  
               __Hrparam 0000                 __Lrparam 0000         __size_of___aldiv 010C  
               __ptext10 0C20                 __ptext11 10B2                 __ptext12 12C8  
               __ptext13 0E30            __size_of_main 00CE          _USART_Init$1205 0013  
  __CFG_CPUDIV$OSC1_PLL2 000000               _LCD_gotoxy 114E               _INTCONbits 000FF2  
            ??_read_time 0014               _OSCCONbits 000FD3             ___aldiv@sign 000A  
         LCD_command@cmd 0001               _USART_Init 11BE  
